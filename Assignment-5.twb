<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20221.22.0415.1144                               -->
<workbook original-version='18.1' source-build='2022.1.1 (20221.22.0415.1144)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Data' inline='true' name='federated.152gmuq1rhsdxr1cssizs1ipje9b' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Data' name='excel-direct.0e04qwq01dn3rz1azgxl312szxq8'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/INEURON/Assignment/Tableau/Assignment5/Assignment-5/Data.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0e04qwq01dn3rz1azgxl312szxq8' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='integer' name='Postal Code' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='string' name='Country' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Market' ordinal='13' />
            <column datatype='string' name='Product ID' ordinal='14' />
            <column datatype='string' name='Category' ordinal='15' />
            <column datatype='string' name='Sub-Category' ordinal='16' />
            <column datatype='string' name='Product Name' ordinal='17' />
            <column datatype='real' name='Sales' ordinal='18' />
            <column datatype='integer' name='Quantity' ordinal='19' />
            <column datatype='real' name='Discount' ordinal='20' />
            <column datatype='real' name='Profit' ordinal='21' />
            <column datatype='real' name='Shipping Cost' ordinal='22' />
            <column datatype='string' name='Order Priority' ordinal='23' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.0e04qwq01dn3rz1azgxl312szxq8' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='6'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Segment' ordinal='7' />
              <column datatype='integer' name='Postal Code' ordinal='8' />
              <column datatype='string' name='City' ordinal='9' />
              <column datatype='string' name='State' ordinal='10' />
              <column datatype='string' name='Country' ordinal='11' />
              <column datatype='string' name='Region' ordinal='12' />
              <column datatype='string' name='Market' ordinal='13' />
              <column datatype='string' name='Product ID' ordinal='14' />
              <column datatype='string' name='Category' ordinal='15' />
              <column datatype='string' name='Sub-Category' ordinal='16' />
              <column datatype='string' name='Product Name' ordinal='17' />
              <column datatype='real' name='Sales' ordinal='18' />
              <column datatype='integer' name='Quantity' ordinal='19' />
              <column datatype='real' name='Discount' ordinal='20' />
              <column datatype='real' name='Profit' ordinal='21' />
              <column datatype='real' name='Shipping Cost' ordinal='22' />
              <column datatype='string' name='Order Priority' ordinal='23' />
            </columns>
          </relation>
          <relation connection='excel-direct.0e04qwq01dn3rz1azgxl312szxq8' name='People' table='[People$]' type='table'>
            <columns gridOrigin='A1:B25:no:A1:B25:0' header='yes' outcome='2'>
              <column datatype='string' name='Person' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
            </columns>
          </relation>
          <relation connection='excel-direct.0e04qwq01dn3rz1azgxl312szxq8' name='Returns' table='[Returns$]' type='table'>
            <columns gridOrigin='A1:C1080:no:A1:C1080:0' header='yes' outcome='6'>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='string' name='Region' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Category]' value='[Orders].[Category]' />
          <map key='[City]' value='[Orders].[City]' />
          <map key='[Country]' value='[Orders].[Country]' />
          <map key='[Customer ID]' value='[Orders].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders].[Customer Name]' />
          <map key='[Discount]' value='[Orders].[Discount]' />
          <map key='[Market]' value='[Orders].[Market]' />
          <map key='[Order Date]' value='[Orders].[Order Date]' />
          <map key='[Order ID (Returns)]' value='[Returns].[Order ID]' />
          <map key='[Order ID]' value='[Orders].[Order ID]' />
          <map key='[Order Priority]' value='[Orders].[Order Priority]' />
          <map key='[Person]' value='[People].[Person]' />
          <map key='[Postal Code]' value='[Orders].[Postal Code]' />
          <map key='[Product ID]' value='[Orders].[Product ID]' />
          <map key='[Product Name]' value='[Orders].[Product Name]' />
          <map key='[Profit]' value='[Orders].[Profit]' />
          <map key='[Quantity]' value='[Orders].[Quantity]' />
          <map key='[Region (People)]' value='[People].[Region]' />
          <map key='[Region (Returns)]' value='[Returns].[Region]' />
          <map key='[Region]' value='[Orders].[Region]' />
          <map key='[Returned]' value='[Returns].[Returned]' />
          <map key='[Row ID]' value='[Orders].[Row ID]' />
          <map key='[Sales]' value='[Orders].[Sales]' />
          <map key='[Segment]' value='[Orders].[Segment]' />
          <map key='[Ship Date]' value='[Orders].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders].[Ship Mode]' />
          <map key='[Shipping Cost]' value='[Orders].[Shipping Cost]' />
          <map key='[State]' value='[Orders].[State]' />
          <map key='[Sub-Category]' value='[Orders].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:X10001:no:A1:X10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[People]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B25:no:A1:B25:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Returns]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C1080:no:A1:C1080:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_24639564201948428861F61422FA4EB2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_24639564201948428861F61422FA4EB2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_24639564201948428861F61422FA4EB2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_24639564201948428861F61422FA4EB2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_24639564201948428861F61422FA4EB2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_24639564201948428861F61422FA4EB2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_24639564201948428861F61422FA4EB2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_24639564201948428861F61422FA4EB2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_24639564201948428861F61422FA4EB2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_24639564201948428861F61422FA4EB2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_24639564201948428861F61422FA4EB2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_24639564201948428861F61422FA4EB2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_24639564201948428861F61422FA4EB2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_24639564201948428861F61422FA4EB2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_24639564201948428861F61422FA4EB2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_24639564201948428861F61422FA4EB2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_24639564201948428861F61422FA4EB2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_24639564201948428861F61422FA4EB2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_24639564201948428861F61422FA4EB2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_24639564201948428861F61422FA4EB2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_24639564201948428861F61422FA4EB2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_24639564201948428861F61422FA4EB2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_24639564201948428861F61422FA4EB2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_24639564201948428861F61422FA4EB2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Person</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Person]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Person</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[People_1EBC50D917CE459E83B28481D3C3A5FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region (People)]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[People_1EBC50D917CE459E83B28481D3C3A5FB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_8B24C1D0B3444338827D7A4D46242BAD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID (Returns)]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_8B24C1D0B3444338827D7A4D46242BAD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region (Returns)]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Returns_8B24C1D0B3444338827D7A4D46242BAD]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_24639564201948428861F61422FA4EB2]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='People' datatype='table' name='[__tableau_internal_object_id__].[People_1EBC50D917CE459E83B28481D3C3A5FB]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Returns' datatype='table' name='[__tableau_internal_object_id__].[Returns_8B24C1D0B3444338827D7A4D46242BAD]' role='measure' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='Location'>
          <field>[Country]</field>
          <field>[Region]</field>
          <field>[State]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Republic of the Congo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Myanmar (Burma)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;The Gambia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_24639564201948428861F61422FA4EB2'>
            <properties context=''>
              <relation connection='excel-direct.0e04qwq01dn3rz1azgxl312szxq8' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='integer' name='Postal Code' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                  <column datatype='string' name='Country' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Market' ordinal='13' />
                  <column datatype='string' name='Product ID' ordinal='14' />
                  <column datatype='string' name='Category' ordinal='15' />
                  <column datatype='string' name='Sub-Category' ordinal='16' />
                  <column datatype='string' name='Product Name' ordinal='17' />
                  <column datatype='real' name='Sales' ordinal='18' />
                  <column datatype='integer' name='Quantity' ordinal='19' />
                  <column datatype='real' name='Discount' ordinal='20' />
                  <column datatype='real' name='Profit' ordinal='21' />
                  <column datatype='real' name='Shipping Cost' ordinal='22' />
                  <column datatype='string' name='Order Priority' ordinal='23' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='People' id='People_1EBC50D917CE459E83B28481D3C3A5FB'>
            <properties context=''>
              <relation connection='excel-direct.0e04qwq01dn3rz1azgxl312szxq8' name='People' table='[People$]' type='table'>
                <columns gridOrigin='A1:B25:no:A1:B25:0' header='yes' outcome='2'>
                  <column datatype='string' name='Person' ordinal='0' />
                  <column datatype='string' name='Region' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Returns' id='Returns_8B24C1D0B3444338827D7A4D46242BAD'>
            <properties context=''>
              <relation connection='excel-direct.0e04qwq01dn3rz1azgxl312szxq8' name='Returns' table='[Returns$]' type='table'>
                <columns gridOrigin='A1:C1080:no:A1:C1080:0' header='yes' outcome='6'>
                  <column datatype='string' name='Returned' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='string' name='Region' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Region]' />
              <expression op='[Region (People)]' />
            </expression>
            <first-end-point object-id='Orders_24639564201948428861F61422FA4EB2' />
            <second-end-point object-id='People_1EBC50D917CE459E83B28481D3C3A5FB' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Region (People)]' />
              <expression op='[Region (Returns)]' />
            </expression>
            <first-end-point object-id='People_1EBC50D917CE459E83B28481D3C3A5FB' />
            <second-end-point object-id='Returns_8B24C1D0B3444338827D7A4D46242BAD' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Hyperlink1' name='[Action1_2D0D4A9658DC465EB8FC47DCA6FE8D68]'>
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 2' />
      <link caption='' expression='https://en.wikipedia.org/wiki/&lt;[Country]&gt;' />
    </action>
    <datasources>
      <datasource caption='Data' name='federated.152gmuq1rhsdxr1cssizs1ipje9b' />
    </datasources>
    <datasource-dependencies datasource='federated.152gmuq1rhsdxr1cssizs1ipje9b'>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data' name='federated.152gmuq1rhsdxr1cssizs1ipje9b' />
          </datasources>
          <datasource-dependencies datasource='federated.152gmuq1rhsdxr1cssizs1ipje9b'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='Returns' datatype='integer' name='[__tableau_internal_object_id__].[Returns_8B24C1D0B3444338827D7A4D46242BAD]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='Returns' datatype='table' name='[__tableau_internal_object_id__].[Returns_8B24C1D0B3444338827D7A4D46242BAD]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Returns_8B24C1D0B3444338827D7A4D46242BAD]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Returns_8B24C1D0B3444338827D7A4D46242BAD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Returned]' derivation='Count' name='[cnt:Returned:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.152gmuq1rhsdxr1cssizs1ipje9b].[none:Country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Country])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:Country:nk]' member='%null%' />
                  <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:Country:nk]' to='&quot;Zimbabwe&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.152gmuq1rhsdxr1cssizs1ipje9b].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.152gmuq1rhsdxr1cssizs1ipje9b].[cnt:Returned:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.152gmuq1rhsdxr1cssizs1ipje9b].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.152gmuq1rhsdxr1cssizs1ipje9b].[__tableau_internal_object_id__].[cnt:Returns_8B24C1D0B3444338827D7A4D46242BAD:qk]' palette='red_green_gold_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.152gmuq1rhsdxr1cssizs1ipje9b].[__tableau_internal_object_id__].[cnt:Returns_8B24C1D0B3444338827D7A4D46242BAD:qk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.152gmuq1rhsdxr1cssizs1ipje9b].[cnt:Returned:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.152gmuq1rhsdxr1cssizs1ipje9b].[__tableau_internal_object_id__].[cnt:Returns_8B24C1D0B3444338827D7A4D46242BAD:qk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.152gmuq1rhsdxr1cssizs1ipje9b].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.152gmuq1rhsdxr1cssizs1ipje9b].[__tableau_internal_object_id__].[cnt:Returns_8B24C1D0B3444338827D7A4D46242BAD:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.152gmuq1rhsdxr1cssizs1ipje9b].[none:Country:nk]</rows>
        <cols>([federated.152gmuq1rhsdxr1cssizs1ipje9b].[cnt:Returned:qk] + [federated.152gmuq1rhsdxr1cssizs1ipje9b].[sum:Sales:qk])</cols>
      </table>
      <simple-id uuid='{5FEAF0C5-28F6-41B9-816A-855B1B5F2F48}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data' name='federated.152gmuq1rhsdxr1cssizs1ipje9b' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.152gmuq1rhsdxr1cssizs1ipje9b'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='Returns' datatype='integer' name='[__tableau_internal_object_id__].[Returns_8B24C1D0B3444338827D7A4D46242BAD]' role='measure' type='quantitative' />
            <column datatype='string' name='[Returned]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='Returns' datatype='table' name='[__tableau_internal_object_id__].[Returns_8B24C1D0B3444338827D7A4D46242BAD]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Returns_8B24C1D0B3444338827D7A4D46242BAD]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Returns_8B24C1D0B3444338827D7A4D46242BAD:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.152gmuq1rhsdxr1cssizs1ipje9b].[none:Country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([Returned])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.152gmuq1rhsdxr1cssizs1ipje9b].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.152gmuq1rhsdxr1cssizs1ipje9b].[Longitude (generated)]' field-type='quantitative' max='53850563.566342101' min='-14725110.873699876' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.152gmuq1rhsdxr1cssizs1ipje9b].[Latitude (generated)]' field-type='quantitative' max='33670565.064611182' min='-10738379.205773953' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.152gmuq1rhsdxr1cssizs1ipje9b].[none:Country:nk]' />
              <text column='[federated.152gmuq1rhsdxr1cssizs1ipje9b].[__tableau_internal_object_id__].[cnt:Returns_8B24C1D0B3444338827D7A4D46242BAD:qk]' />
              <text column='[federated.152gmuq1rhsdxr1cssizs1ipje9b].[none:Country:nk]' />
              <color column='[federated.152gmuq1rhsdxr1cssizs1ipje9b].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='2.1546962261199951' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.152gmuq1rhsdxr1cssizs1ipje9b].[Latitude (generated)]</rows>
        <cols>[federated.152gmuq1rhsdxr1cssizs1ipje9b].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{11B0EE9D-93CA-4C6F-B408-119F87DAEE88}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data' name='federated.152gmuq1rhsdxr1cssizs1ipje9b' />
          </datasources>
          <datasource-dependencies datasource='federated.152gmuq1rhsdxr1cssizs1ipje9b'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' forecast-column-base='[sum:Sales:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.152gmuq1rhsdxr1cssizs1ipje9b].[fVal:sum:Sales:qk]' />
              <color column='[federated.152gmuq1rhsdxr1cssizs1ipje9b].[none:Forecast Indicator:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.152gmuq1rhsdxr1cssizs1ipje9b].[none:Category:nk] * [federated.152gmuq1rhsdxr1cssizs1ipje9b].[fVal:sum:Sales:qk])</rows>
        <cols>([federated.152gmuq1rhsdxr1cssizs1ipje9b].[yr:Order Date:ok] / [federated.152gmuq1rhsdxr1cssizs1ipje9b].[mn:Order Date:ok])</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{FE917D3E-E2CF-4B75-8A72-AB0D0EF02FEF}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='40250' id='3' name='Sheet 3' w='97900' x='1500' y='2375' />
        <zone h='8000' id='4' name='Sheet 3' pane-specification-id='0' param='[federated.152gmuq1rhsdxr1cssizs1ipje9b].[none:Forecast Indicator:nk]' type-v2='color' w='14000' x='34800' y='2375' />
        <zone h='48500' id='5' name='Sheet 2' w='40800' x='3700' y='48000' />
        <zone h='46375' id='7' name='Sheet 1' w='50000' x='48300' y='49875' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='11' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='10' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='40250' id='3' is-fixed='true' name='Sheet 3' w='97900' x='1500' y='2375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8000' id='4' name='Sheet 3' pane-specification-id='0' param='[federated.152gmuq1rhsdxr1cssizs1ipje9b].[none:Forecast Indicator:nk]' type-v2='color' w='14000' x='34800' y='2375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48500' id='5' is-fixed='true' name='Sheet 2' w='40800' x='3700' y='48000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46375' id='7' is-fixed='true' name='Sheet 1' w='50000' x='48300' y='49875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8C294137-AB55-49C1-B37E-1D48DBCCF804}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.152gmuq1rhsdxr1cssizs1ipje9b].[none:Country:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.152gmuq1rhsdxr1cssizs1ipje9b].[__tableau_internal_object_id__].[cnt:Returns_8B24C1D0B3444338827D7A4D46242BAD:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.152gmuq1rhsdxr1cssizs1ipje9b].[none:Country:nk]</field>
            <field>[federated.152gmuq1rhsdxr1cssizs1ipje9b].[none:Returned:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{71F1D65D-5AAA-43FE-B4B6-C72D440F75BC}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.152gmuq1rhsdxr1cssizs1ipje9b].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.152gmuq1rhsdxr1cssizs1ipje9b].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4A62388A-08E4-40AC-96C1-747C166939F1}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.152gmuq1rhsdxr1cssizs1ipje9b].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.152gmuq1rhsdxr1cssizs1ipje9b].[none:Category:nk]</field>
            <field>[federated.152gmuq1rhsdxr1cssizs1ipje9b].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{124C0EE2-C3B1-4285-8209-7182C745C87F}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='5' />
      <simple-id uuid='{5DDE8B35-5595-45F6-993B-5DDD553848F3}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2daXAd2XXff9399h0P+w4SGwFwAzkc7stwNg2lkSWN5ciS5ZJjpZyqlPM5
      VUlVVOUqp7J8SyopS/EoLiuJZcW2PB7Nyn3fCYIgiB0g9uUBb996zQeQM5wRZ4YL8LC8/n3D
      Q/c93f3ev8+59557rmAYhoGJSZ4irvQFmJisJKYATPIaUwAmeY0pAJO8xhTAMhCPx0mlUit9
      GSZPgCmAZSCbzaIoykpfhskTYArAJK8xBWCS15gCMMlrTAGY5DWmAEzyGlMAJnmNKQCTvMYU
      gEleYwrAJK8xBWCS15gCMMlrLI/7MJVKoapqrq9l3ZBOp1EUBUEQVvpSTL6CxwpAVVWy2Wyu
      r2XdoKoqhmHk/BlqmgaAJEk5tavrOrquY7E89ue0bBiGgaqqWK3WZ27jsVfs8/meuUETEASB
      /rn7GHJu7WqajmEYWCy5FoCBpmlYrbkWACiKgs22xAIweX7+ywc/o2O6Z6Uvw+QrWKJOcIzT
      /+/XTKQ//aT/6vtc6Jv/4lMyES6evcRsavE1GQtNkHiqN2aG2+cvMTqf/PQjPcPwrbP84u2f
      8dOf/oy//tv3GZpPARrRmRlST9CtSc5PEDWjv7xhiQRgoGRltEcKrGiqjKp9ScUVR4B9h/ZS
      4rIB0HPpXYYjT2dTVVR0/VMbynwf5/sUvva9H/HjH/+IbxxoxWkRgTRdp04ylv7i1h4ycu1d
      7s09zXWYrGWWPwRKzPDBxQ5sWpLRiRB4a3jl2MtUiRH+8XwXh/e2c//mGU7dGEIY/gtulpRw
      5I1vE0h2c/7CTSajWQqqN3P00E6Cdp2RrstcvN5PUtdIZb0c29z+iSlJsKAhk0ym8Nu9FFTU
      gpLi1sl3OdN1F9v8X3DJX8Grb72JJ9TBBydvEM1quIobeOnILpJ95/no6hCZnr/gbsDFwTd/
      SLUwwrnTFxmdT+Ipb+bwwd2U2OJcPnmSuxNhJEche187RmuZa9kfpcnSs/wCMHQyyRTVOw5x
      8PUgg9feZ3QsSlWNTlaWMSQX2478Dtn4NM7df8KWEoAk169MsOnlt/iaDwYuHqdzNMK+gkmu
      jhi8/N0fUuyWuXri2mduQCxs4FDjLJc/egfN7mPzroO0VgdpP/oNUrMGRV//fZq9i8em3GW8
      8tYfUOCSGL58msHZGId2v4ESHiW++U/YUwWQ5s7JPqoP/g4vF9oYu3GG2wOTHCicY9xezx/9
      eAdGJkY0x51dk6UjJ51gW7CcurICrKKIy+8j+mWhEUB6ho5bd8gOD2EBDFWmwtXOQmKO8rat
      lHptgIbVYuEzI+2CjQ3bD1LZkiE6N8qFM+8Q3X2Mg02ffzvrpCMTnL70AfPJLJnILIV7N0Lz
      5w7LLtB9t4e5/mHOAoam4GutxNVSR2nnaf7h3XnqaqrYUN+AAZij/muPJRKAA7sjQyajgUsC
      dDLpNI5yB/AMi8MtVorKNrH3+8cofWSEa+bW3UUbX4BhGCCI2J1uSmo2cXjnBB9Ph+G3BBDl
      zo1Jth37HhsDDkJdH3Plcf0DyYLXX8O+732Lattn/3X4zbdIRUKMDN7h6iWNo69twfn0d2qy
      wiyRAOzUbSzj8tnTaK3VaAtD9MSreK3KDZn4E7Xg9vgY6L6FK1VIaXkF9VUXOXvyIls3FKHE
      Z9CLd9DW0EjyvUtc0dvwizG6h8bZ/UgfIDPdw+muaSqrKnEIWUbuRahrbwcc+Ap0+jruYK0K
      UFLtwypkmRobRZ1K0XvtDsmGegC8wWLu3L1GYbaQkspaWptEznxwhh3NFRjpOTLuJho9Me6N
      higIFqDpINlsZk7JGkX6yU9+8pOlaMhbVIFPjDM2MUdaCrLnwAsUOiQQRKx2JwV+L5IoIIgW
      3B4fHrcdq91FUTCARRLxFxaTnZ9kIaVTWFJJVU0NtvQcE7NhNGcpTRtKcLqCVBRKTI2NkxY9
      NDY3UVbkx2FdnPixOH24hBRTU9NEEgrlrTvYXFuEJEgESkpIzo4STkFxRS1VFW5m74+S0Bw0
      bd5KZVkRBR4H7mAZRCaYjaYJltVQXlODV51nYjqEYimkfkMFfq8TPRlmdHIWxVbCrl0tuKVP
      A6BUKsW7nSeZToSW4tGaLCOCWR166QmFQvznD3/GUGQ8p3YNDAwDxBznIK2cXTAMHVF4dv9r
      CmAZCIVCWK1W/H5/Tu2qqoqu69hstq8+eAnRNA1VVbHb7Tm1q+s6sizjcDieuQ0zdDXJa0wB
      mOQ1ZjLcMqHd+G+o8liOrRoIgLoCMxKiYaCuwPoH6TntrgEBGGQjk1y/3sF0JIu7pJr27dso
      8dlW98RTNgqZ3I8CrdQzWat2V30IFJ/u5R/fO4uzeiuHDh+gucjK5PgM5no1k6VglXsAg9Hu
      mxRve53tTYWIAhQXl3z6XznG7atXGJ7LUN7czq7WKvR0kvGpaQJekRu3Jti8awvp8BSp+RAD
      43N4a7bQVpTh9p1B9EAd+17YjM+uM9HTwa3eMVSLl9ade2go96KGxxiIGCgTPYzMZ6lp28Pm
      ugCjgz0EKjdR6LGiqzLD/fco2rAVv2NV+ySTx7DKPUCMmSmJmtoggq4wPzPO/ftjhKIpdC3F
      3evXUYIN7N/Xjj56hWt9YdRsiqGuC5y93E9ZUzMFNp3B21cYUQLs3ruTzJ33ONUn07JzJ97I
      OINzEZAThGU3W/cc4MUt1fTfvMBcXEOJTnHh7AW0omZ27WhlovsiMwkNOTRFz9hizrSSGKS7
      L4v07IuSTFaQVe4BFBTZhs0moKtZpu/30Ts8jurZwrGDFQyN9JK0Rhi3CGQSESR9jJaSMhIJ
      aPvaQRqCTshGcRTX0tbWTJnfSnWpnXTbDqrLNZTgfWKiBvYAZf4xrl+9SFqWmYhrtGRkPEDV
      ln3s2FQLapqJ0WEUTaBuYzldnVNoLeUs9PXian0Fj2S+/dciq1wAAYqKY0xNpaiq8dD24lHK
      ym9wtRM0XQNXIS/s2P8g9BCwu33YlDgFFVWUeJ98ciQ13sXp7gVe2LkXl5Dh0rUb6NoXJ905
      S+tp1D6mZ66C6Uk/23Z6luBeTVaCVR4CWahpaqTv8knGwikMQ0NOpVEAm9OF21CZTRoUFhfh
      tujEE6nFtGRhURBPSioaxx4so7qsCJsWYzb8Fft7iS4at5Vz590LpKqrKMrtGnSTJWSVewAo
      3LiTw9pNLr/7N7yf0fEUlrPzxS3YbV72HtzLmdPHeftsGldJHfsP7keUsrg9Hj6JSAQJt9uD
      9cEHDm8hwoO7trndOC0WCjZsouDUCX7+9mWKquupqi7HZhURdRc+58O0AhGX24NNWnxnOIpa
      cFs6qSwuyu0DMVlSzFygZyQbHePc5UG2Hz5EkeOzjjQUCiFe+0/4MkMrdHUmT8qq9wCrD53Q
      4E1OXuyl6cg3CdofH0WK7f8SyZ3b5DBN0x7UBcrt16rr+oO6QLkdCjMMA1lRsD9H8p/pAZYB
      Mxs0N5jZoCYmz4kZAi0T+thZtMkc7xav6wgGaFJu32uGYSDoOlqOa5JigKipaM8R8q0jAeik
      41Gi8TQ6gCDi9hXgc9tXJFHLGDuHsQKdYIHFlVK5RlyjdteRAGR6znxER1Sg0OsA0UZd6wu0
      bbRjDtObfBHrSAAAXrYd2cOOyuAnn+iaQiqjYrFoROMqgYAXXU4Si6fQEHH5CvA5reiaQjqV
      QdNkUhkVm9tPgdcBhoGSSRCNJdElO4GAH7tkkIrHiKWyWOxuCgJezEyItck6E8Bvk45Mcu1K
      D4ZVZsEo4aXdLUx2X2RgJoOAgipW8srX92FLTvHBLz/CUlmOICeIpgs49ruv4dPmOP/BKcKG
      HUl00bJ/D+XKFNdu95NUVNSMSu2e12iv8ZkjCmuQdSaABc786n9zzWkDm5v2Q1+nLaAyfn+C
      ttffYH9tGVZBx7ppB8UbDAxDpufcaSYS+9ggiHiL69j+0iGK7QJ33v8HZjPA/RvEy/fyjReq
      sOgqKho910dwV2yirdRNOjLK7Zu3aaw8iM+MtdYc60wAQQ5/99hnQqDkfJTKhlaa6sqxiaCk
      Y3RdOcdURkIEFmYncCYAr4DD6cHtXFxpZrMJ6AbMz0xS3PwGdguADUFOMTfWz7ieYHpYAgQC
      Fc1I5mzKmmSdCeBxCEiixMPSMdnMDDG1mle/vhOnnuXm+5NfOooQLCmnd2oSubwMi6GhIeAp
      qKSlbh+7GktAV5FlHVsePMn1SN59bVarByNxi1MfLWC3isxPJ6j/kuP9DTtxvX+GD2Y8WEUX
      DS+209hUy6nLp5kb8CEJIsHKZrZtrePZ5yNNVop1lAqhk4rGwenG9cjrWFNl0mkFl9e9OGZs
      aCQj84QTWawuH25RRnQX45RkkkkFl8+NBGRiYQx3AQ7RQE5FmQ/H0SUnhUUFOCSDZHSBcDyD
      YLFRUFiMyy59Mt9gJsOtHdaRAFYPoVAIafIcPjH51QcvIYaxuEmeKOa2N24YBrqu53x3Sljc
      nE+SzJngVYdYexRpBZLhDF1HWoFkOENVkVYgGU6XZWxmMpyJybNheoBlwshEMCw53m5S1cAw
      MJQcf626DqqGoea4NIZhgKxgaM/u8UwBLBPa5f+GmhrMud3F0oi5R1whu9Jz2l0fIdB8L//r
      r/+aS70hHu6aaugyfVfe4+c/+yX3nzIrOTZ2h9O3cv/jNck960MAchIKKkiO9pFSFxWgZRKM
      J7L4yfIl24o9Fl/1Fo60f9nsgMl6Yd2EQC5PIRZtnlgii6fAQSo+g0ERXncGAF3LMtZ1hQu3
      +pBtpew5eojmIoPrJzso3X+AKrvC3Y5O/HWb8cbu0ZUu42BbFUpqgWtnPubeeIxgwwu8vHcr
      1tQEl85dYGAmRdHGbbx6eAceq7i6i/WaPJb14QEAwe5ho0dgZGFxU77w6AD22kacD+4wOddP
      34Kfb/7gR3z35Xrunr9BRAzQuMnLnSu3mRjsYkEPUhJ0o6aihOMZIMvA+VPEKvbzB3/0Iw5v
      rULSMty6cglH40v88Y9/wHb/JCfODSGbsylrknUjAJCoqC9lemACWVtgZMxOfe2nFduiI11c
      vXGe//32X/KLX59mYnyUcAZ8FS2UC0OcuhVh87Z6PlPhJBuiP+Rj15Yq7BYrwcJibGKKeMZJ
      w4ZSJNFBdduLOML9JJ5hN1iTlWfdhEAAlqKN1Mrv090tk6hpotwKD7uygtXJ9qO/yxs7Sj+j
      ejWroOLAIySZTygEH53MkazYBA31M293EUHQ0I3FrbENQ0HTJVZgbwiTJWAdeQAAJ1VNPq6e
      v09tReAz//FVbiDSdZ6BiRDh0BQ917sI6woTd6+RLtrJS4ebGbp2lYX0Iz1mS5BNtQrnz99h
      bmGe0bExMpqTIq/Bnc4+wuEZ7l6+hFi3Bd+6epXkD0u2T/CKYqjIkofyAhdWhwtFh8b6OhxW
      ASWr4iuroMBXRLlPpfPGdXpH5nDXNlHnlbk/52D79lq8rgBWOUpK8uJ3CgjOAkoDXnwVdVhD
      3Vy9eY+0tZDqqhKqKsuIj3Vx9fYAYsUOjr5Qg+URD5BKpRDGLmBXwiv3TEyeCDMZbhkIhUII
      1/4rvvRoji0bi8WBcz4etXbtmgJYBszKcLnBrAxnYvKcmAIwyWvMsYtlIvb3P0ddmMmpzcVo
      1kAQclwaEWNxIU6O7YKBrhskxWe3u/oFoGa4399NzFXHltrgVx+/hKQXJphRPNSV+pEXRhlM
      eGiqCT5RpTl1fBh5rH/Zr9Hk+Vj1IVA2MU9373VunOsmpj9LCzKDV6/SNxt96jMTU710Ds8C
      INpc+FyrfHNuk6dm1XuAaGgMa9EhtrlvMzgj015uA1KM3gtR1FKDC53o5DgpdzHlfhuh4R56
      JxaQHAEaWjZhWbjHlRs30KfmmQmW0LC9BXcyhux2o86NMKEUsrOxkOmRQYYm58Hqpb6llRLf
      Z0dSdCVDWnMgYiAnFxjsGySUkHEHq2lrrcVuKmNNsso9gM7c2H0K6uqoqKtiYWTiQVpClDtn
      u4gBoDHb10n/TBx9YZBTHWO4AgU4hCyzcxFEpxefy4XHX0BhYQC7RSA0OEBn1yWudc1gd9gh
      ucDwTBx3IIiLGNcvXyP+uey27PRdrg6GAZ3w3BSxjEQw6CM9epXLA7EVqYxs8vysbg+QHqV/
      powjRxzYF6rIDg6QzNbi/4JhX8PQ0HUdRAc1TQ0EvA5EfFSXlKBsbKC1pghQiRBnZiHAt97c
      i1MADJWmyjgD43NkszKRaJR4Rufxo+kihaXVxBMDzIRjyCjM3J9Ba/St8odp8jhW8XdmEB7q
      p3vkNtM/7QFNZjbuoGHXni8UgFRQz5GdIuOzM1w+fhtf0z72tD6u4+yheWv94o8fg9hoF+fv
      zFJTW4HLaWNibgFNffwqGkNT6Ll5gTE5SHVJAQohJsMZNFb1wzT5Albvd6YmuDsk8+0//pe0
      FHsAjcnrH9MxFqGp0IooZclmNbJqlKnZedRyUFIJdF8522ubSFYPcLGzn3TzHiSLSjghL3oH
      AUBEFB8G7ToL01GC9ZvY1lxBZKKPOz1fHNAYmko0laVpxw7qPFmGbg+Y4c8aZtUKQE7GiNls
      tLmdDz6RKK2vIX12ktT27Wxo0Hnv53+J0xfArQiUiAKoKbovXuQ3kxEkV5Dt+47gkixUN9dw
      9+R7/M+LBRz81ss4JOkRAYiUbCzn9kcn+MsLAoXllUg2K4IAgighPTxOlLCIIoLFRlnQzbl/
      +DnnnIVUFYPVssq7UiZfiJkLtAyEQiHi/+PPcJjzAKseUwDLQCgUwhgfxivm9tHq+mJpxFyX
      KDQMHU3Tc74/sYGBqqjPtT/xqg2B1jq2DU04zGzQZUXXdYTnzAY1BbBMGKqCLsu5tampGLrB
      M02YP49dXcdQVfQcrws1DANDkdEfkwskPuFLwBTAMjHx5z9hZrBvpS8jLxFdbhr/zz882bHL
      fC1Pj5qk48oNZhJPXlczPNhFz8zT5/o8DemxW5y4OYZZ/GF9sfo8gK4wNzWLv+nJy7lloiHC
      YskyXhQ4q9t5uXpZTZisAKtPAJ9j+MZpwqKD3s67KL56vv76fgpdFrLxOa6c+pi+mQxkFTa+
      3gqGQXyml+PHL7Cguth28FW2byzEEh3h7HAGZ6ibO6MxarYf4WB7HTZBZeLORU5c7UMqrOOV
      V49S6ob54ducPHeLmO6ibd9R9jaXkh6/xbVENYc2FZKcH+Hi6YsMzacIVm/jjdd24TE3Cl6T
      rL4Q6HNMD91hOBngm9/7IYdKw1wbjIAa4+IHJ7C2vsaP/vmPeGXHBuwSaPEhPjzVy9Y3vs8P
      f/dlZm+e4N5kDLIx7nZ04Wp5iT/4/reQp+4wu5Ai1HeLe+kSvvfP/5hjO4q4fPoCC/EkHXf7
      2XHsB/zo949RZF8cylTjs4wvpAGDjCLSuv9N/sWPf8S+0mmO35w1Z4PXKKveA7h8ZWzfvgm3
      HfRCP6IqQuQ+cwXb+E5DMRbA7rAjChAdG8JSv536QidgZ3u9nzuhJFvKoKipnbaqIKgp/AUB
      RF1mYnSInu4QQx1nMTSVpDXITrkdn0Xh4qnjZHa+QENtyWd+3IYh4HFa6Tr3Hr+ZiKLJMVyN
      TaiUkuPq+CZLwKoXwGNRVTSL/fHuy3hYKgO+9LVsGGiCn/3ffJUdGwo/86/qN77P1tg8Pbev
      8MsrLr7z/aOf/lPLcvPKBZzNr/LjbxQiT13lnetKzoceTZaGVR8CPZaCCtwTHfRMJ1HSUQaH
      7pNWwF9djzp4i4FQmmx8jluDUSqL3I9vQ7RRWWzj9q1OIlkNJR1hYGCASDxDf/ddstYCWrdv
      IaBkyTxymqHryKqB1+NAjc9y83oXT7n9gMkqYvV5ANFKaWUZbtvidH6gtArHg6u0eEso1Wxg
      L+Toazs48eEvuSIE2VS3iQq/HclXwtdeUTn+wf/lrOai/eBrtFT4IeqnqujBbKEgUVRYjNNu
      Jbj1EK+Kl3jnF2+jWgO0H3iJWpdETI/w/t/+FUkxwK6jRykG0r4yakQXotXBti2tnDz5S65Z
      y9ixpZ2mlH+NvklMzFygZSAUCjHzH36CxZwIWxGeZiLMFMAyEAqFsFgsOa8Mp6kqumE8V3LY
      s6A/yAWy5TgXyDAM5GwW+2NygYQnTMtYfSHQOkEQhCf+EpbQKBjGythdgfs1DOO57Zqhq0le
      Y3qAZWLuV39DbD6UU5uG8aBC23NUSltTdlkMv8p+8Ic4auueqY11LQA1OU//8DhZ1QBBxF1Q
      Rk1FEfbnWcJo6IRnplDdQYq9VsITU0gl1fg+F3Yn73SS6e99vhsweSLUr78JzyiAdR0CZaa6
      uTE4RzabJZOOce/ySa4Nzj93u7qqoekGINN/4exT70NssnpY1x4AoHjDZnZvLcMwDKIFZ3h/
      KgTNxcRnJ8EfJD4xhuopoyIgMHF/lGhKxeYrpq6qFIeQYXToPuH04sIWyRVgY00lkt3+YPnf
      SuyNbrKUrGsP8CkG2cQst3tDVJcXADB26wwXrl3jRs8YWVUnOzdM9/0QiVSCkduX6RgJATpy
      NkM6nSY618u5c3dJqSoDd24yNBtb2VsyWRLWvQfoPft3jFyyIIgualpa2Vq2ODYvZ+IkPSW8
      8VojTouIodSzJTNKOCljcU0wNBVhT2MJDVu2UxOf4vLZCG989xUKnTojK3tLJkvIuhdA86G3
      eH1rGZqSYab7Imc7hvne4VZsTj+b2ppwWQTAYKLrLFcnbZQWOFGyWWLaYmBvaAq9nZ3YGtqp
      81pAz+06X5PlZd0L4CGiZMHlspOdehi3i58WvSLN5GCazW+8Qr1dY6JjgeF5wFCZuneZWdsm
      DjYu74ozk5Vh3Qtg4OI7TN1crBBgWFxsP/DqY46yU17v4uO/+QVXXR4KbClUVyXy/DAffniO
      uL+SsbtgL97Aqwd35fYGTJaVdZ0LZOgairKYHyMIAoIoYbFIiIKArqogWXjoBB4eayAgSSIG
      AhaRT86HxVKJVqsFQ9NAlJDExfwbJCuProgMhUJM/Nm/RzLnAXJC3X/4z3i2tT/TuevaAwii
      hM3++Cpp4ueqmH3RsY89/5FzJcvjE88Kv/Ud3Epu+wuatlgZzmLJbWU4XTfQdS33leGMxWJg
      9qqaZ25jXXuAlcLcJzg3mPsEm5g8J+s6BFpJUv395DorWX8QAmVyHAIZuoGmaWSty/9zshWX
      4Kh59pDn85gCWCamfv42Yq/ZCV5qin7nW1T96Z8uWXt5FQLNdZ3gw1tjT35CqId/vLS4rNEs
      jbg+ySsPoGsKivYUBUwMDfnBvJlZGnF9klcCeJTIvY/5Tb+AMzHObEyn8cDrvLy5Ejk6wfnT
      ZxmcjWPVs6SqDgGQ6DvJh5Fm3nqxnPB4N2fPXGc6IeP0VXDo669T9/kFASZrgrwVgKHKaPZq
      jr56CFeij7+9Og2bSxi+fhlj42H+8BtlSLOd/F3f4g/b0BSy6qL3sHrLOPSNf0bAZ2O+9xQX
      7s5Ru7fC3EV+DZK3AhAkK+W1dQScNtDd2CUFiDA2X8jOlyqwi4DF+lvL/AwDMgvjXLjayUwk
      jZaN4dhYhkwFuR0FN1kK8lYAj0cAOU3mS6YGDTXLwOAw9fu/wzerPGSnrvLOdXMuca1iCuAz
      BNm0yeDsR+fZsrGI5P0uwkrzZ44QBAHB0AlNDtEb0Ri5d4uUY98KXa/J85JXAvBWttCmLa4I
      c5Ztoll4MIVuK6S9xQOIVGw7wo6uDiam5yir28Eh12LhXHtpCzsDBQiSnS07d9N9b5BQ0k/b
      /tepz3rz60GuI8xcoGUgFAox+/bbWCcncmr34VeZ+wJVPCiLsvx2/QcPUvLW7wJLkwtkCmAZ
      MJPhcoOZDGdi8pyYAjDJa8y+2zIx+Gd/jjAwmHvDn2yPs3btNv3HP8fd3LQ0jX0FeSEAQ45x
      9+Z1+sYXcBTW8OLunbjlcUZjAZprPhunZxaGuTsqsnl77XNNbKmRKMzltjboesFQc1dwbN2H
      QFo2yqWP3mNUL+HAkZfYXOslmciSjU8zOp34reNtvgo2NZaZG97lCeveAyTmhpnSqnhtVxte
      qwBFi+P6kTEDOTbD1dOdjEcMNu3aT2ulHzkxzdCMg5bmYiKjY0SMDBM9fYQyVrbsO0x9sYNM
      dIrb1zsYj2TwlzVzYF8bTjMRaE2y7j1AcnYca2U9HuvnfqFqlvuDwzirt7B/azG3Lt0hDcix
      SfqH59ExiE33cO5SLyUtu3hxSyndF68SU3US8SSBqjaOHN5Ppd7LmTvz5j7Ba5R17wE0VcHi
      sP52/8zioLF9D1vqKwEbJTf6HrPYxceWvRtorilDTXspHDqDqokEAgHGhm9xtiuOkp5DLQmh
      bS1c/w9zHbLuPYC7qJT0xBhpfWne0YYm03ntAnH3Rg4ePsyBnU1IWRltSVo3yTXrXgCe0npc
      sW46+mfQDJ1EZJq5SPaZ2zN0jVRWo7yqioBLYm5qBrNa6Npl3Xttq6uYw68c4OK5k7x9Oomz
      uJrDR1/GYXPhdT0c67HgLfAgAdjcBHwOBARsLjdO24NHJIq4vT6sNjsNGyo4/d4vuGQvpnlj
      KSUWp7kYZo1i5gItA6FQiKF/8+/gXs9KX8qapPWn/x1PW+tXHmcmw61SQqEQRiSKN8fJYZqm
      Le4TnOMShbquo2oqNuvSJOHZSooRn+DZLYUA1n0ItFLYiotw5FE2qLQC2aBLwbrvBJuYfBmm
      B1gmpt/5kPlIPKc2dV0Hw0CUcl8aUTd0pAd2bcEAVT94K6fX8Kx8qQC0dJQEbvzOh4fJxBZk
      XEHPF56oZBKkZAmf1/lMtTF1VSGdlXG63J/U7teyCVKGA6/DAoZOOhFHs7nxiArzSY1A4MEI
      zrOiy0STGn6v83la+Qwz751A68zPTrCrvm7NCOBLQ6B430k+6o488skUJ351ieiXnJOJzzEx
      HUYHiI5yfWDuqS4oHZ7lRsdtMo/MLKVGrnBpcHFXRiU9z4Xjx7m/kIZMhKHRuQdLdyIAAAqa
      SURBVOefhEpP8NGF/Pyx5jvPHAIpchpZ1sikE2RVAV+wCI9dwuErpcYlYSgpQsN3uDAQoMKl
      YPMEKfI5kFMxIrEkumQnEAhgt4oIhk4qFiaWypKOhJG/qHqhoTDSeR2lfBuNpR7QLNRvELAB
      qpwindVRMkmyqoC3IIjHYcEwdDKJCNFEFkQJm9NL0Od88HmUaCID2YVPSiAaukoiEiaRVbE6
      fRT4XEiiQDYRJWNAJpFCsLvwuyzEIjFUwUqwqBC7ZM4ErEWeWQDTQ1c4f3kWX7EbLb2AGtjF
      sVc2MT90i+65IHu2eLnXd5/w5Cw3biwQbHyRInucK+euE1NU5KyCt3Yzh9obyE51c/xyD5LN
      hpaR0QoqHmPRIDp6k645Py99rQGbCMx086tbIn9yrJ3w/Sv807kQZWVOlESEbPEOvvNSK9m5
      AU6cuonmcGFRYoxKjfyrb+8muzDMiZM3UGwObHqMBbUegMj9m3x05T52pxVFhsbdh9heE2Tw
      7P/julJBUJCJRMK4g+U4kElH5wm++G2ONOZ2xMdkaXj2TrBop7x+C3v2NmNnnhN/d5skmz75
      t7OgioN7t9HdHeTN11sAg/k7p4n5a9hWE8RIzXKhY4hYQ5Cergla9r9CU5mf1OwYN/rHf8tc
      18m/oUu1cOg7v0fgccn6kpWyhm0c3VuPjUne+/UoGTRGbt+ieNcb7KrzIc508NPrKqBxv7OD
      gh2vsXuDHyk5xK/Ox0AP03llkm1fe5Mmn43U2C3+vrOfzTW7ES0uWrYfZkeZlZ7THzLpb+Cl
      9o3IU1f4eDgGpgDWJM8hAAtujwebRUTAhk3kK1KCVULT00zOzaPNLo5Tu7wlSHqWpNPLloAX
      8cFGdo/rPG8++nvstPdzprObjWX7CNo/d5Ag4XJ7cVglwIoNAYM0iYifmg1+LAIgig9KhqSJ
      hFzUHgk88jmQiTGr+2kPOBABT1kpvkv9pABBsOByu5BEFVGy43Y7sYgCqsWCaCZDr1m+VADe
      4nJSN8dIyAW4LQbJ8QkyFWW4gdSTtC6KoCqohoGERCDoIehu42u767AKBumsgsNIYiRjRFMZ
      fA4XSjaF/NherUThxl1snz/B2UtdvH6gja8es7HjcEWZm8lQXmJDyWbRdQArNnuU2ekMFWV2
      1ExmsWy6w0uxEGUqmsXjtZKenSXmduF6kns1WZN8qQCk8m00C7/mvX8aw23XiUQVXnj9mzzx
      xHNBNaULp/mn34xT0fQCL7bsxPXuGd6Z68ZlFTG8lRzd3cKOjT5OHn8fr9eLqKZJ2r9gU2rR
      Su32fcyePsHNgRL2fWXUYWXD5kY+OPVrxnw+bJk5knoTYKe+fRPvnfo1E34/DiFOOF0NYpCt
      u8v5+IN/os9tR05rbHnxoDlZso75ylwgJZMgHI6S1cDhCVDodyEKAnI2hapbcDptCGgkIikc
      AS9GJklGlfB4HAjoJCPzRBJZ7L4iinx2sskoC5EEGhJufwF+tx3BUImEQiRlHYfbh90q4nY/
      Mg+QiZPCuTgPgIGSipHQ7QTsOvNpgSKfE1VOklFteFxWQCEekXEF3OiZBJFojKyiI0aG+M2Y
      l3/xRjuGrhIPh4ilNRxuF6JoJ+h3YegqsYUQ8YyKze0n6PdgEQUy8Qi4Ajgkg0wigWZx4HZY
      0ZUU8awFv+fT9INQKET3n/7bvJ4H2P3OXy27HTMZ7gkIDVzh4r05LJJAJpmhsv0QuxuKl9dm
      KEToNyewhr9sxmTpMXQDA+O3Srovu13DQNcfmQkuLKD6h99ddrvLJgBFUdC09bHGSVdShEJh
      sqqB1eWlqMCHZZlrWIbDYSwWC16vd1ntfB5N0x5slJ37bFBN07Bac1tLwzAMFEV5ruS/xwpg
      YWGBVOqJurkmjyGdTiOKYs6zIw3DeFCkNvceYCXswoNM1OfIfVr3IdBKsFLFcU0P8PSY6dAm
      eY0pAJO8xhziXkc8Tyz8PIiiuCLxvyAIz736zfQAJnmNKQCTvMYUgEleY/YBlhlDy9DfcZ3x
      qEplczsNFX6WZu2MzuzwXXrvz6JKXupbWqku9CAIEJ7o4W7fBFJBNZtbGvDal+E9p0S5feMe
      jupNNFYGEFmsxN15dwjdVUrb1hYKHEvbJ9HkBP2dHUxGFQKVDbQ2VOGwCGSjE9zq6CVjCbC5
      fRtFrie3a3qA5cRQGLn6EbfnbVRWFnHv4kf0TsWWpOmF3gucuzdPoKyGUneW06cuk1A1tEgf
      x0/fw1FajTh/j9NXe1GWqC7qQwxdZbzrOrcHeukbCqFjoMVGOHn8JmJRNW55jNNnO0gqS2fX
      UON0nD7OmOqlqqYCUU2SlVX05CSnP7yAGqyk2B7m1PFLhLNftKTwtzE9wDKixye4Nu7h2Fsv
      4hEMCvQYV0fGaa346qpnX4WzeiffbnIiCgLoxcx0n2NOy6Jd76TswNd4odaDXufn3Q87iMoN
      FDmWbpIqNT/MrSkLuzZXMRwH0Bm/ew/3tn3saS1Hl0sJH7/IbCzFhkL3Elg0iI90M2xr4K09
      mx8pQ6kz1TmAvqGdA1saMbQNJGMfMT4dpaC24IlaNgWwjMiJGBQG8YgAAv6An+Rkeknadrpc
      gIGhyUz29xAOFrLbonJrwUVl8eLQoOh0U6JqhHWdoiWxCoaWoq/zHlVtR/Cnb0EcQGYhKlG6
      YXHlhGi1UyhZiCsysBQC0JiZjmJJL/D3v7jKQkakdss+9u+oI5rQKCpazLkSRIkCp4eFbBow
      BbDiGLqO3f7pOLXFagFh6aJOOR7izvUrjMmFHDzyIk5LCt1iw/4w2U+QsFuXcL2aoTDVdZ1Q
      wTaO1vqYeyTbW5es2B/OBQgidosFeclyDg1kOYksVHHsu6/hFJKcf/8DOkfcBCQJ28P5DwGs
      FhuC8OR3bApgGbHY7CTjMXQDRAzSqdSSZaIaapLr586gVuzgtc11uCwiYMFFknBWp9IBhpYl
      ohoEl6h2tZaO0XG7g95YF0PXJDLxOSJZJwnhddrIEpUXtxgxdJWYouBdsi7m4voQv78It11C
      wEtTXQX30mlK0ZnPZhbtGgbJbArxKX7WpgCWEWuwnKpkFzfHN9FebudezzAllS8uQcs6cx2n
      mC8/yLHtpY8UBXPS0Obig8u91LzUhjo2wJTdwx7r0nzNkquQY3/4rzn24O/pnjPcnKvktQP1
      pIdjvN/RS33xi1gW7nM/A0c8S7WYVKJsQxXnj99mbGM5lR6NsZkwno1NlBUWcONqL6ENFXiz
      kwzMJNnWGnjils1s0GXg02xQH6m5AT784CxzaZ3Sxhc4tHcLBY7n/UEmufH3f8uZySzuT/Y+
      K+Ebf/QmlWKWm6c/5NbwHBZvOS8cOERLZYDlWAIx23+RzvlyjuzZgEVNc+/KKS7fG8dwBGnf
      9xJb6wqRlsoJ6DKT/Tc5faGLhCZS2bqbgy9swmdRGLl9idM3+1EtbrbsfYUdjaVYn9CuKYBl
      YKXSoU2eHnMewCSvMQVgkteYAjDJa0wBmOQ1pgBM8hpTACZ5jSkAk7zGFIBJXmMKwCSvMQVg
      kteYAjDJa0wBmOQ1pgBM8hpTACZ5jSkAk7zGFIBJXmMKwCSvMQVgkteYAjDJa0wBmOQ1pgBM
      8hpTACZ5jSkAk7zm/wPUvHab2o4A2QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      zR0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9Z5xdx3mn+dycQ+fbOUd0Qs5gBClSoqhkWdm2nMfjcV6vvZ4dzW9n7bE9
      Djv+eXYsr+RdS7YCbYuiRIoRqdGNRgOdc863u2/O8YT90ABIsAEQgQS6ift8Am6fe8576ta/
      6q2qt95SyLIskyHDQ4ryQRuQIcODZMcKIBqNPmgTMnwI2LECEAThQZuQYRsiyzKLM+MMjc8g
      XefdCywvObdcr75/pmXI8MET98wzuBCmMSvKpf4YqWgYR0kxzqVpllYT7G9ZJ5BSYzOqiYZC
      O7cHyJDhRqQiIYz2HLJzs/GtzDPvk/BN9lHefhA9ac50dOFdXWFwZICiysZMD5Dhw4W1rBHl
      zBl6fUoO7G9m2quh1p5Pz+VebAUFZGdrseQUYU5ayMuxoNip06DBYBCbzfagzUCWZWRZRqnM
      dKYAoiiiUqketBm3TeZXu0ckSSIWiz1oM7YNkUjkQZtwR+xYF0hMxhgdWQKNkSw9bHhD1DQ2
      sTTeT37dPuSQkw2Pl/ySOgqyTQ/a3PcVMRVncnoGSWUgx6hk3ROgurGZ1Yk+sqv3ooyuse72
      kldciyPH/KDN/cCZmRghGJOoqShgfmmN/OJKpLCTuDqL2jIHi1ODyJYKKgq3egw7tgdQag1U
      VZQiSxLhhEBrcyXrqz4K87NIChK5jhKyrQYkaUd6eLdEqdFTVVGGLEmE4mna22pYW3ZTVJBF
      QpCx2eyIgsCH781vTEV1DRoFuNxBmlpbiPjc5BcUIqaTxEIeBIWKeDx9w+/uWAGIiQgzyx6a
      GmoQ02mi4TAqgxGVavOVVhdn0NiKKcz98LWAYiLC9JKLpsZaJCFNNBTafPcr4xBRoaa2uhSv
      x/eALb0fyExNTFK7qwmtQiQWiyHIClTqTefG7/UTDQdZd7lu+O2dKwBJgUJMMLe4SmVFCRsB
      kdJcDaveOCHXCihUuJ1L+MPxB23q+44oSSiEJPMLK1RUlOL0CpTn61nyxIm4l4mFQyw6g9RU
      FT9oU+8DIgqUzE3PUlhZhdu5RlVVGQsLS6SiQbJLqmlp28ue5uobfvvaLFAkEkEUxftq+r2Q
      TCbR6XQP2gwkSSKZTGIwGB60KduCaDSKybRzxlzXBsFm84fPVbgfiKJIPB7PlN872A7T07fL
      jnWBMmR4P8gIIMNDTUYAGR5qMgLI8FCTEUCGh5qMADI81GybWKBkNMj0/BICGgwkicRTlFWU
      sbC0itFix6gBk1pGMjlwfMhiezI8OLaNAHQmG1pSiCoDqNTsqnDQO+ikfV8rqwtzhAN+3JKB
      A3tNiKLIdoniFkURURQzWzSvsNPKYtvsB4iHgwSicZxrLgwqGbUatEYbsbSEmE5j1KvQSGkM
      eeXk2YwP2txrZBbCrme77NO4XbZPD2A0okmkaGpqRK0QiSYE7FYToUAAvdmKQpZQq9WkUqkH
      bWqGDxHbpgfYqWR6gOvZaT1AZhYow0NNRgAZHmoyAsjwUJMRQIaHmowAMjzUZASQ4aEmI4AM
      DzX3XQCyEGdxxclPXnqRwE1SVWTIcL+47wJIx4J0nXoFrSkLl/8dOf5lGde6k0g8SSoRxeUN
      ADJe1zqJlEAymUSWROLx5P02OcOHmPseCqEx55Jjs1JeXUOe/e2YnmQshKzSMTM9jUYhYdIp
      mQ34kFRanO4ZjAY1ynSS7LI6MvkXMrxf3HcBpMNuovEIS4uLCBoTNqMWAJ3RQmhxjMLiEgJe
      D45CC33DTtr2trC6MEc06CUuGag0aDLRoNuYnVYWWwQwOTaEoNBRW1uLVn1jDykUCqFWglJn
      Qq+5s0zAkbSS7Jx8XP4Ah/Is1z73Ls+wEU2jiSdQCnFGJwM0NFQwPjKEyZaNLbuAEp2SFXeA
      kjz7Hb7mB4dCoUClUqFWb5u4wgfKTiuLLZaGwmGs2UbmF+apK81nZiNCcG2OwrJSnIseDHYr
      RrWSRGidkCqXXIuaklwzHn+M+XU/VcV5+AM+rDnFlBXmbHng5OggCUmD1QCxpIBRuymgnLI6
      jpVdvcpx7frs7Nzrvp/9/r17hgxbB8EGs52aqkrEVAIhnSCeSGLPLyLHZqKorBqjWkEymSA7
      L5+qijISiQTJRIxUMomjrIaIb42kAIqbpGY9cPAQ/tUZFlbWiad2Tia6DB9OtvQAhYWFqFQq
      yosdzK64ceQXoVMrUGs02GwKRFMuoiBiMemYXV6jKNfOuj+MoyAftHpM2buYnl3AbL7xphUp
      naC0ppbwpJPUDvIVM3w4ue/7AdbXN7AblZzqGubxJx9Ff5Nxxv0kFPBjtNhRKUQCoShZNiuL
      czPkFldg0mtIJ8JMTC9QUFyOFPORVBgoK8on6A9gsllJfoj2AyRjIQSlEYNaZHpmgYrqGqL+
      DQS1hfxsC7IssbI4hzGrkKh3hWA0RXlVHQHXMlmOMqRUPLMf4FZMT09w7nw3DWU2FtaD9/vx
      WxBiAV586Qf44yKzk2Oc6rzA7EgvvqTEqdPnAFgYuEwYLTqNkmRaZmagi8XVNX74vZf5MO1P
      k0WB3tMv0r8UYH1tFY06zfnOy/RcHqG3qwsBSEUDRJLQ3XUes8VGcH2BiaFuVoICZ06dun+2
      yjKp9OZCqpBOI8kyopAmEo1xtUlPpxLE4glkWSIaiV67JhqNX3PQ7/tw3apVoCmswWw1ot0G
      2R3URju7m2oAqGlsZcnlwZ5lZ3xoFp97c6Eur6qOjckZeofCVOdqWQ8JHMp3UF9Z8iBNf99R
      qNTsbm+nPwZ5Odmc7pihdW8dSzO5GJMbRAGryUbUO0xVfTNZOXmIWhuNNWW81T2ON3T/GrTZ
      8QH6Ztb49FPH+N73/pkTH/8qcecoK6sr5FUcoqUmi+H+PpZXVrDlFoCcRqnPQQxvYLQVsOfA
      bjQ8AAG0HTxxvx95S2L+Nbov91MSN1FiSDLQP0BVRTU6lURNcx2ryyuI6TCRcARLno1l5wZ6
      rYLF+Rl6hwcQCx20VX84hCCm45zvushMupDASAxBayES0eJeO09Sk02+08lydIPLE6u06XPw
      LPpxVLdisCgx6xTkVDfcN1trmnaz5Paj0ls50L4LgNKyMhZW3JSXZoFSTVmJA18css3g9KcJ
      rc4QCQXICoYob9iFw6rN7Am+FbIs41xzUlx084MmHqY9wWvOVQoKi1AqFDe95v7sCZaZHO7j
      ldPn+PQnP8X5N17CUnOMxMIlskrqaW9vQxbT/MsLL7CrbQ/1lcWMTYxjzS1nfW4UhUpJ+/Fn
      KLLrMgK4GxIpAXcgSmm+7YEIIBp00315iNZ9h8gxqegbmmLvnlaQZSaHe0lqs2lrqGJ04CIV
      uw6iTvqZWHLR1lR/18+UZZk5px+TXnvLg/fulwBSySSiJKNWqxEEAYVCiVIhI0oysYAbzPmY
      NDKyrECn1ZBKC+h0WmRJJC3K6LQaYAeHQ6+5wwjpOJ3nOoilJQBmxvp5/c2zJNJpLnScwxdJ
      MD85xGuvnSL+Pi05pAWRr7/Uy2/+zWuEog8mMG+0v5/G5kb6+0cZG+hjenEVgKRvns7BeTQa
      Df61OYaG+gglobdvAOfq7D09M5ZI81/+sYM//qcO3IHoTa8b673EKy+/xMDEEl2vfY/uCScA
      Yfci//ZvP+L1s130dZ/lxR+8yLrbzXf+6R/pGZi4Q2sUaHV6DAYDGo0Gg8GAUqUmlgaDwUBO
      YRk5Fj16vQGDQY9SpUKv16FQKFCq1CiVShY3gvSMr24vASTiMUQJ0sk4vkAIkAn4vCTTIqlU
      ClkWSSQ3512SKg3nT72JOTsHWZJAlhgfn6GpeRfT/V3kVzfSfb6DsbEpmlqbMdzj2c2iJNE9
      usL/+ndvYjHq+K2fOoTlShzT/cZotjI4OIhZnaTj0ihLUyN4wimSET9lTQdYmh3j1KmzRII+
      +s+/xvDMGqNDYyTushHwBmP8n9/u4JlDNXz8SD1//K0OvndqlGhi6xxYWkiRTicRZdi7Zw+i
      tPlQGZlkOkkqJRCTVHz0RCtTy050WivR6L2dLRxLpPmTfzrPf/zGaTZ8732vH3RM8B/+r59w
      YXQZ1de+9rWv3dPT3yeERITLly6SVVjB/NQY6ViQYCRBMJ7C7XITj4UJeVyozNkYtCrsBjWD
      vYOUFGczveSjtCifrCw7M4MXSBpyWJyewGDLZ19bEwvDXSTt1WQbb6ECWeLsm6/S1z9ETkEe
      b715moSsIdtmZaD7NL/8J98lIaopVyxRWZhFgSFJT+8ArmCCwrxstNrbE4N8xU0JJFUokgEu
      DUxQVFKECpidGMQVETGqUnR0dGPLL2RjfpzVQJK8bBtXPe9YyIvXHyG7qJqPPfMENpsdbTqE
      MreKtbFutNYCnv3oszhyLFS2HOP4gRasVgNFjsI7/l2WXUH+7LtdfPJ4A0/vr6a6OJtH2suZ
      XPbyrdeGMBu0FOdZro0LLvXNceJEO3OzazhsCpZDUJZvx704hr6olcDGIgpZRCEKKPR26hob
      WJgdp76u7o5tg0139L99t4v2WgePtJXz9R/1sb+hCINOc8OyH1/08MPOSb7ydBs//Vjz9hoD
      rMyOYi1pZG1xjvJCC71DTtr3bUaDJmJ+4pKBg3tbr0WDTg71MLfioqq2Ga3egGtxhA1vlOra
      ChaX1jBnFWAU/axuBDjx7PNk6ZSIksyc00dpvg299h2TYLLAaz95FZNWgXM2gKrSQSgkcmoy
      jknwsLfKzIF9e/AtzhCTVVQU2plaWiO7oJJ9zdW3fTCcf26QU9MBDrY3oxQTSJF1/Mpy6vIE
      Lk25kIPL1Ow+hlWd5GznJcz2PLQJN3WHnyHbcPMOOxKJ3NE4JJZIM73iY2BmnaJcCy1V+RRk
      mVC8Y4A7POfi/3ttiF9+bg+1JVujsNyBGN85NUpaEPmdzx4CwLuxwszCOq27Wxi+1E1SVmMy
      GGloaWZ2ZIC8igaytAITi25am6oZ6e8jv7KRgqw7H0PFkwJ/9UI3bTUOnj1UgwLoHlvlxxem
      +f3PH9nSQ48tuPnmTwb57Z86SFHuZiDmthFAIhLgUs9F7GW70CW9hGMpyivLmV9cwWTJwqAF
      i1ZJQmPbEg0ajwYRlUbMhq2qv4osyzi9Yb75cj/JtEgknmJXZT6PtpdTWZiFWqVkbXmeocEB
      nBENp8a8CHE/jxw5THuZgfLCLAbHpqmtqmB1ZgRvUsnePbvpHxrnieOHbrvyTZ15DV9JE/7Z
      CdrqSphai3L80F6UUpJTp06z6lzl6U99juGOM+gLShAC6zhXlzjxia9SYrv7WeuljSBOTxh/
      OM7AzDouf4yqoiwaynPwhuKMzLlIpUUaK/JoLMtlybXpI//WZw9RnGu96X0lWSYUTWI364G3
      B8GiKCHJMhr1PfqeNyGREvjL712gqSKP54/VXxOuLMu81TtP5/Ayv/eFIxh1GmRZZmzBzTde
      7ud3fvowxXlvv8+2EcAHiSBK/Khzko6hJb54soU9dYUkUgK9U2ucG1jEH0lwsLEY79oibw57
      OLG3nkOVOsorq3AuzNDUWMfYxCyNzbvwrs6TVFkod9gZHhmnorYBlSzctgCEmJcfvXqe7KJS
      gkvjaK15tO6qJamysTE7QEw2UVdiY3R6AWteEeq4j0BKy+OPHkH1jtnHWCJNx9AiFQ479WW5
      N38gIEkyf/SNUyyuB/nE8Qb21Dood9hRq97uUWQZApE4YwtuXuuZZXjOxd/+1rPXWsrb5aoA
      /p+X+5hc8vKff+5RjPqbN0x3QzyZ5q++301jeS6fON5wXa8FmyJ4qXOKsQUXv/u5I0yv+Pj6
      j3r53c8doSTvejF/qAUQTaRYdoX4x1cHqS3J4bOP78L0rh9DlmX84QRdI8sk0yKP76nAbtZv
      KdSb8X5Mg4aDAfRmGxrVrZ8pyzK+cJzXe2bpGXfSWlPA0OwGv/zcXurLcm5osyzLfP/0KEsb
      Ib70VAuObPN7vlsyLeDyRynJs952OVzlqgC6RpbpGllmzRvhUycaONhUcp3g7gZZlhma3eBP
      /7mLpw9U8ZWn225qnyTLfP/UKBNLHoKRJL/3+SM3FPOOFYAsy7f8cVJpkd/9H68TTwr8zk8f
      pqH81q3k3XI/1gH84TjDcy5GF9xML3t5fE8lj+6uwGzQsrQR5C+/f4FffX7flp5AlmVe6Z6m
      f3qd3/3ckevHPIAQD3Gxf5x9B/ajU4rMLqxRXVWGLIsMXb6Eo6YZizLOwMQSB/bvgWSYVX+C
      8qL8m9r67nWANW+Y7741ii8c54snW6gvzbnOXYkm0qx5w0TjaepKc27aWyxtBPm3c+M4vWGK
      cix84ckW8rNuPe6SZJkfd02xt67wOrfnnexYAbx5eY6W6gIKblAIaUHkmy/34wpEef5YA63V
      BR+YHXcrAJc/SjSRoizfhkIBKBQoABkIx5I4PWFmVv3MrPqYXPKw4Y/y6586wPHWsi1+tdMT
      5s++08kvfGwPzZWblVOW4a3eOc4NLvKHXz6+pfIDnHr1ZVra6hmaT1KgCTC8Eubzn/wI63MD
      zEez8C4N07qrGWV8A5e2gvjKOOF0jI88+exN3+tGC2GyLDO94uPbrw9hMmixmXSseSOEYkmU
      CgWFOWZ0GhVzawHMBi3NlXm0VhdgNmgJRZO82jODJxjnE8fq2d9QjFJ5Z73SrdixAhie2+Bb
      rw/xR18+gdWku/Z5MiXw3/+1hzy7kS891YpKAaIko1IpEUURlUqFQqFAliVEcfNzSRJRKFQo
      FCCK0pVrbs+OOxWAJMmMzLv4u5d6cQeiFGSZkZGvRDBu/hQmvZaiXAs1xdlUF2eTazMQjqWo
      LMy6qV0r7hB/8b0L/MJHd9NUkUf32AovdU7xB188dl35vJP+C2dZ8fjIzcmnq2cAIZ3kV/79
      ryP65zndPY7OmsOhhiIGZzeoyVXw465pUjEfv/brv4H2Jt7MrVaCRVFiaG4DhUKBI9uMzaRD
      r1Vf6xFEUcIViDI672ZwdoOe8VUsBi2/8vw+2msd11woz+o8l4cnCMTgs88e4X9841/55V/7
      KhopSceZ87hCcZrrSpifm0E0l5OvcpFU1XPsSM0Wm3asAADO9C9wqn+eP/zSZgsXiib5y+9f
      oL3GcWVmQObNV15Ck11GnjLCvC+K0VrIY0fauXD2DTz+MA1trfT1DGGw2yk0w4Y3SG37MerL
      8m7LhncKIBxLEo6lsJp0mPSa67r6WCLN+eFl3uqdI89u4nhrGbl2IzXFb08vXv0p7tTvvsqa
      N8KffaeT9hoHw3Mb/NGXT2C36G96/cDFDjb8YXJLGtjbXMXFi5cpdeQgk+Dy0AJas5WEew6D
      NY89h06Qbzdy6VIn+/cfvek9369QCFmWGZl3YzZoqCzM2vJ35/QAYUMZ3rkRYkmJEycfRQtM
      D12id3qNz3zyOUZ6OihvP4pN7eH8aR8nTjZuuc/O2b18Ax5pL8cfSfC3P7jEF0+28NcvdHNy
      XxWP76m8UokCzE96sRUK2OtLiUZd2PM254ZFjYFnH2/mrXOnqT/+GSILPSSBZ598lO4pJ9ym
      AN7JzKqPH3dNEYomSQkidosBm1HHzKoPtUrJ/oYifuuzh64NRNPJBKFwGJPJRDwaQanWYTTo
      NgUTi2EwGhFSSURZgV6nJRaNojMYbzqYLMwx87nHd/Ff/6mTP/jSsVtWfoD2g8ev+//Bg/vw
      eNzk5FTwfPnVynJ9Zb9V5b8VQipJLJHEaDKjUkIq9XZsTiQaRaPVo1bIpEQZrVpBLJ6kutCK
      0bD1HWRZZHo1yLFjJlZGIwwMjFLZ0kKpzYApvwzrspNINEJQ0GLXKQgHo8TiMSRJ3uI+bZuV
      4Bshi2kmJ8YRlTrSyRhqRRp/RMCo36zECoWChrIcJpY8/MMrA/zMM+0cbS57RwuqY9U5g16j
      JSkpyM7JIRpJkmU343EuMbOwQmntLiYGehEksKhFpucXyS2uIs9+ey6NLMsMXe6kb2CY/Cwr
      JsFNllbgN778NBXmJBPjo0gKHcfLZQxiCIdR4Cddg2h1ZgZ7zuIPx8kyJPnXV/sxWYzkZduZ
      HupheGoGtzdI76Ue5qfG0JosTE9NMrWwSnXFZvaAkYuvMu3RkvTO0j+1SFVZCUU5FppyBabn
      ptCmgnRf6kFpzGNu8BxOv44ix61bZ6PRdNc9EEAymUSv31ppO06/gdsXxJpbyMLwBd7qmaG1
      qRrP9CCnh+Ywmcx0nX2dxfFhRGs+i1MjXByYpKXpBivEskRWbh4Gg5GqmlqaW5pRhNcIKW1E
      XIvkltRRkGUiv6AInQpGR2dRGiHf4UDzrsZjW/cA7tVlckurca8solJKLCcEmlparrtGoVDw
      lafbeP5oPTlbDs9T8szHPk5SAKNBSygUxmzUMLfs4/DxR4nEkljMJsqKilFpDWiUEIkmsFju
      bEDrcDhYXhvF7iilJEfLlFtGq1YxNztBW3UeeaX1ZCnCXByZIRKTMWokUuk0joJc5haXWM/L
      o8CuYHZmgaaaclzRNE89cZKOztOoxBRRQU1BcTHu5VkqqzZj3yPeFWKyjmQ8RWVzK8udm7vX
      FHKaQDBCgU3NhsdP+5799A/18vjRXQz0xe/6t7hXihz5TM/NMz0yjjckYlClESUZrT0Pg7zG
      3MISaoWMNw5HioowRpyUNBy44b0USjU2y9tTmlabDetVtyun/drn5isLwXv2H7ypXdsqGO7d
      iPJmuKtCoUBIJ0kJ0g1bJ7VKeYPKv4lGZ8BsMqBUqrDb7ai1JuqqS1GqNFgtm66I0WRBp1Gj
      VKmxWs23PQC+ilKXw75d5ayueRgen6e5oQKALLOFxr2Hca3OYy0spyxbS9yUy1OPPcLS/ATI
      KjRqJbFoCoPBgCgIeD1e8sxafvL6qyhVZkSlCpMeOt54hQVvCknc3AboXFnD43IyPDl5XR6e
      eNCNP+DnUs8A1U2tLM9OYMkqQq36YFZkbxdJAq1OhYgGR44Zj8+P1+0hIQoY9AYEIU1KSJNv
      U7Phj7LgTlCR98HvGNzWg2BJSDA6OklWQQk6lYjdrMcTkSjcRomxRFFkfOAS3oSSI4f2EfB5
      yc3N5VLPJfbs201v9wXq2vazMjlIXGWlra6YCxf7aT9wGItOiSDKaLUaUskkao2WhYU5qqqq
      SSVTaHVaRCGNKCtQKyGVFlCpNWg1Vyq8GMcdFFiZ6mfNF6HEkYu9rJmyXCMezwZqKc3Q7DrH
      9rXQ0XGOaFrFY48/guEOk5ndCTcbBEuiQCototNpUbAZXbuwME9VVRXJZAqtVocsCdfKQ7oy
      c/dBs60FsBN4mHaE3Q477ZTIa31nJBJBFDOJqu4USZJIJpOZsrtCNHrzzTLbkWsCyLRgd0em
      B9jKTuoBtvUgOEOGD5qMADI81GQEkOGhJiOADA81GQFkeKjZNqEQ6USUmbkFsvKL0ZPAFUhQ
      U1XC3PQ0WY4y1AiYDWqCcQXZN1n1zZDhTtk2C2GikCaVSjI5s4hWpaQwR8fSRgJHeRke5zI6
      nZpULE51U8tNY9EfBJIkEYvFMtOgVwiFQlitN99Ev93YNj2ASq1hfX4GtUaDSqlAp9eTSIQx
      6HSoVUriYT9xQYdaqUCSts8heZIkIUlSZiHsClcPDdwpbBsBRINeokkRrdGESZliaslHW1sN
      kxOj2POKsNtt2IxaNjwBirZZLNBOOxjug2SnlcW2cYF2KpmV4OvZabFA28ibzpDh/pMRQIaH
      mowAMjzUZASQ4aEmI4AMDzUZAWR4qMkIIMNDzf0XgCwjiiKJRHzbrOZmeHjZIgAxnWBhcYm0
      KJGKR1h3+/B7NvAHgqQE6Z4fmIq46B/s59vf+AfmXOF7vl+GDPfCu9asZUZHxyivrGRsfIrg
      2hzZJZUszS/QvrsNncHE8tw0uUUleNZWyC4oJct6Z5GZar2ZpalJjjxxEss7TnRJxUJMzS2h
      N9sxkMAdStBQV8nkxDT2vCL0agmLXklYNFGwDU6Yz/Dh4F0CkFBpDNhsWahX1sgvqqS2oQ69
      zoAm6WdhLk5ucSmJ9UXWwwmCiSWyWu7sdHBJSJOMekmJCuJJ4W1D9GZqKkqYXXEjKqCuLJvB
      wRkaW3extjRHKB5iWdKxZ8/bZ4RtB64GwgmC8N4XPwTstLJ4lwCUGLUwNDSI0ZaHMhUDQKPR
      oFRqyTLaWZmfoSjHhjqYpCD/zhPIKhRK1GoV3d09PP/pT177XIgFmF7xs6u+momxSZKJBHq9
      mngyiSBKGCw2VJEYybSEXr19xu4KhQKlUonqAWde2y6oVKodVRbvEoCCytqtKaTLS4uv/bsw
      PwcAR0n5XT3wtVd+REJpwaAWrqbDByCZTIMQZ2nVRVFBFq5AgpaWeuamp3EUl6JGxFKuxx+O
      YMjaXvHmCoXinhLKftjYSWVx36NBZSHJ+bNnSKBh78FjZJsfzGHT7xeZaNDr2eHRoDJLc1MM
      j4yRSN96U4PT6SQcCnGn80KpiIdkKkIyLeOLPLhsxRkywA1mgQL+IDklVSRcSyTyKgg454mH
      giQEKC7IZ9Xvw2zORogGSKRSICZZXFkjKzeXtdV1SiqqcOTefMOKpLVz6OjjnD57gdI7PIIz
      Q4b3m3f1AAoamltI+VdZdnpJChKRSBSt0UZ5gRmPP055bR1CYnP+Ph6Lsb6ySEIESVZiNeuJ
      RG49t98/OMBoXw9GnYJlT2YdIMODZcvetQ3nCgkM1DSVMzs/hTUrB8/KIkJOIQVWmdnJSSrL
      qyEdRwZsRi3T88uYDHpiIQVm861b9VTQTUiZzf7qXGTd+3uAcoZ7Jx7ykFRZseokBoYnaW6q
      oaf7MqhNHDq6D5UsMTkygMVRRXGejeXFeQpLqyAVZs2fwGq8+zHd5TM/IpXbTEuhjn99vYuf
      /fxnGOh6nZC+lBN7NidnVqdHuDy/TplNi3MjQHV9DVMT82itWXzksSN3/Mwts0CllW+fpNe8
      ywbI5NhsmMwmUrEYbSXlaJVK4O3FqF27Nk8tyc567726j37kEwAPdB5flkTW10RGkVgAACAA
      SURBVDfILSgkHQsSE5TkXplZ8ntcqA1WjFoFaxteCgpyWV9zIiu1lBQXotxBMxx3iiwKDHa+
      ilj9EZQrA5TWlNEztMLeA/vp6OhECaSiQYzZJQz1XsCyp4mXX32Fz//Mv2P0Yi/BdIwjd3mG
      GEBLaxs9ywlMWeWUFm4eHtjU0k735DoAYirC7EYMm1YglZRJCynCbieGgnLcy2N39czbmFBX
      YDJvVnat0Xil8t87D3LqcLTvIk7XBqdOn+Hs+R4udZzGE0kR98xzcXiGN998g/Md5/B61ui6
      2Es8Hqez4xzivUeCbGsUKjVtra0oFCCrjRSXlqCMx0iHNsgprkUJaI0WVqaHqGtu519e+CHp
      WJDuUy/TN7nExOg0qXsoI8WVuqVUKq+d0qNUvF3fwp51/AEvvX2jrAVjPHpkD0FVNhVZKpSK
      rT1POh6is6uHtCQz1t/N0OTCtb95Vp0kJGn7ZIW4n5hNBhaXPER8UbKsSgLeIL5QDJvFQCzk
      w+XzUp5byuzcLKX1hyhzqPE17Eaj+vC2/gBiOk5n92XmhQKONTj48Y9ep27PcWaXZmjec4C1
      pUXSKT8TK34UVi9f/bX/wNhAB2VNx3laCz09HfeQs0mkp2+UaBrmLUpS8RQDY5PE3cvE4gJ9
      vWnK6lt4/mM1+Hz70CokekfnOXFoHwMXO3ni5FNb7tjR2cPulmrOXRhmT1Md3Wc7qauvQJ2K
      cPbF1zn88198OLNChD1Oui4PkF1ciza+wfxGiEePH0KQlIwOXCIm6bFpooTiMqbcEnRxHy1H
      TmC4gQC2zTqAlKbz7DmCcZmjjxxitPcytW0HyLMZiYU89PSNc+joUbSKNFNzSzTU1bIyO4q1
      pAmr7vaE7Xa7yM3Nu2XP/aDWAWRZRobrXNSZ0V7mnWvEkzk0VeroH1vmuU8/j14Jk6c7sR4+
      8HAK4Ea4VhexFpShV99ZK79tBACAzMXODowKAXVFO3MDvXz02ZO89fpPaGtrYmjWR7YyzKwn
      yMceO8or3/06tc/9LzTn371bK4gS0yteaktyUKuUD0wA/3JmjDmnn9/+6cPXzlFeX5qmb3iS
      5v0HmO3rIxhP09LWTJbdxCvf/QG25t3bRwBCIsLFnku0HnqU9ZlhQrEUFZXlzC8sY7RmY9TK
      mNQgGvJx3EM0qCBKzKz6qC3Ofl8OYdtOAkjHfVwcXKLMpqBvbhWrNY/Hj++nr+sUa/4YFouR
      oZE5YhEPVSUOov4VrO2f5ZNHb3AW7w2QZJlESsATiLGwHmBxPcjUipfhuQ3+9595hD11hfi9
      LsZHx6hrP0i2EUYml2ndVYckpLh08QJlDXvQJD2Mzrk4fHg/cszPvDtKQ1XZXb/31LKXv3qh
      m7Qg8kvP7eVAY/FNr/V6PWRn51zrxbbNGECtN1NenI8sy0hqI7vqC+gdXqF9byurC3OEfH5c
      soEDeyoRRZFAXMCmVxHyrnG5f4zS2iZS3iU8KQ1H22s4d/4iNS37KCvIuu45nSPL/OX3L/KH
      XzrK3rrCe7b7airA242AlFMhXn3zPGW1zZgJMbbi55nHjoMscubN14krjBxuqaKrf5xdbbtx
      zY2x7ovw6NPPYtHeuneanZyjqa2VyOI4aqUSpUrB+PgECpWaQDjBXNjEz//clxkb7aW9/QDB
      hUv47JW3ZbsgSnzzlUGmVrzk2oyU5VsoL7BxqKmQDX8l9aXZCIJA99kOtNn5IIn09/QyvRGj
      qb6KxeEu7JXtXO46i4RES2k2owvrBBfHiYtxasqKbqv83s3QrItvvT7E73z2ICa9lv/2vW6U
      CmivKbjh9TabnVAkztSKj/m14PYRgJhOEQpHUEZjCMkYTmecQoedlVUnKVHCZMvBJqTwhhPk
      WPQsLPvY3ZiHLddBfU2UWeciSkmgWBvmte4Rjh17lJG+y1QVH7/2jBV3iB90TPKFJ1t44cw4
      daW5ZFkMN7VJlmWcnjBqtRKzQYdBq0apvL4SKhSKO0oHON11mbjOSDAcpnlvC4uus6jVaoSw
      F1NxA6V4eLWzF0e2hVAkTnFhPsvuIDqNGvV7uGcN7fsAyG5oo6yhDVlKEwgnUJdX8s99ZynK
      0fNH3zjDibZy6pIiOTWHybkNm9OCyN//uB+zUcef/+pJ1CrldeOA2tK3o4KDISVPHK/m8vk3
      mFp0E49FiKSepLCygdMXuvFGYtTkGRlf8mCyRJla8hMJrvPEE+o7GkDLskzH0BI/7priD750
      nPysTa/g979wlD/9507UahXtNY4t3wvHkvzdj/vpGlnmiydbto8AJFHAlleCSkpRW1tDKJ4m
      N8uKz+PGVFoEsohWoyGRSAGgFqJIch5qlYJYNIEoq8gzqxgankRb0ohapb7uwOs1b5i/+N4F
      fvG5vTSV51KSZ+HPv9PF//bl45gMW6fQZFnmjctz/PD8JDlWA7FkGkGUyLUZKcyxsLvWwZ67
      6EHs+XZKKSG2On5d2LBSqyfsnwfCFGfbqNl9gPGBPir27qEidwlXOElFtv6OnqVQarBZ1fz5
      d7p4Ym8VHzlQgz8c543Lc/zHb5xmd62DxvJcGsvzsJp0N7yHKEn83z+8jNmg5StPt6J6j2nw
      9t2FXOzpp6rpIB/5WBH9/YMEnfPY8nLQqmB32z6SvjmUiTiVuw7z6GNWBgcv3XHlf6V7hu6x
      Zf7wy8exm98ul/wsE7/3+SP82Xc6USkVtFRt9gSCKHGqb56XL0zzaHs5zxyoobkqf/uMAe6U
      NX8c98IkeblmhsZmcJTVIoWchGQTh1sqePPMBWpb91Nbmo/LH+W//tN5fu6ZdlqqNwtElmVe
      uzRLz/gqv/+Fo+g0b7cFyZTAN17pJxxL8eufOoBBp0aWNwvRFYiy5o1g0mtoqsi74zGALMuM
      DfRgK6knsDTGsitIiSMHfUE9xuQaEazUledz6coB26tTg8SUVva1NlxrdWVZxhuK89cvdFNV
      mMXPPdt+w5kZWZZ54cwY/nCcX3xu73UzJMmUwFt98/z9j/porsrjl57bS0me9br7pAWR//lS
      L2a9lq985L0rP9x4FigYDGK1Wt+XdZ8Vd4i/+dceTAYNv/e5IxhuEk2w7o3wp9/p5KvPtiOI
      Et95c4Sa4mx++vFdWE26a7bsWAEAJJNJdLobt1xX8QRj/Mm3z/Olp1por3Fc9yNcrSCr7hC/
      /umDqFVKPMEYf/1CN63VBXzqROO1GYWbcT8GwVen+NKCSN/UOmf6F/CGYhRkm1l1hzjWUsan
      TjRucc8uTazyYsck/+lnH0F7g9PhZVlmYsmDOxDjle5p8uwmPn2ikXKHDVmGv33xEgatmp97
      tv22Kj+8LYCFtQC+cJzdtY57rviyLBOOp3itZ5aOwUUUCviNzxyiqijrlt9zesL88bc6KMw1
      88WTrZQX2LbYsqMFcCtkWebswCIvdU3yhSda2Ndw40GWLMt885V+BFFiX30R33p9iC882cL+
      hqLb+uE+aAFcdcV+3DWFQgFNFXk82l5BXenmTEYiJfDt14dwesP86vP7yLNv+sKr7hB//t1N
      F+/qZ7dCkmT6ptZ48fwEeq2aaCJNdVHWHVV+eFsAf/G9C3SPrvDo7gqOtpTSWJaLTnu9x50W
      RFY9YUbmXcyu+qgszKI414Ijx0yWxYBBq74mzoGZdU60lfP0gWpM+tuPN0oL4pYxyzvZsQLo
      HF5GrVKwt77oulb66rz0G5fn6BpZ5mBTCb/5mYO3rMyCKPH7//MN1rwR/viXnqDCcfvnD9yN
      AGRZZmE9wPSKj+bKfPLsxut+JFmWSQkilyacvHZxAvf8GH5fhP/ye59hbHiGxt37qSsrYHq4
      l+mlDfYceYShoVG+/mInv/Lpo0R8Ht6YkfnVT+6nuTL/tu2CTZ//pc4pfnh+gr/5jWewGG/d
      w76bqwIIx5IEo0nWvGG6RlaYX/NTV5KDzazHYtQys+pjaSNInt3Eroo88uxGgtEkq54w694I
      /nAcUZJRq5Q8vb+a421l19wdz+o8l4cnkbVWPvLoAX700is8+4mPQyLM2Y5OPME4R9truDy5
      yu49Bwg7p/Al1Bw9uo9394M7VgBOb5gXTo+x4g7xzMEa6ktzuDi+yoXRFXJtRp7YU0lVURYm
      vWZLy3MjRuZdhKJJDu8quaMu+50CGJrdIJkS2FtftMUduYokyfzk4jSn+hZorS5gfs1PKJak
      KMdCU0UelYV2hudcXBhZoaE8h6cP1FBeYObsuQuUZCkZXAix78BByh3ZnD/zBqIkkVu5C8/C
      DK6gjx+fHiQmGfjkx5/h80+23pX7IcsykizfUct/lZsthCVSAgMz6/z3f7nIgcZinj5QTVVR
      1nVjr3fbEE2k0WvVN3RDw+tzTPlV6CLLTDpjPPf8U2gBWUxzrusi2Yo0c5EU+5obeO2tc1RW
      1XL86EHU757F26kC8K8tcqF/GGN+PWfPn2dsepXnPvMZnt1bTpZFf98C7d4pAFcgyv/7kwGS
      KYEvPdVKhcN+nR2BSIK//1EvOq2arz67G7NBi3xlcWnJFWJswcXUso+milweaavAYtSiUChY
      nxvBp8ynusCCSi3z5hs9fOTZR3nr9ZeprShlZGaRQEzGuThFTV0j+aVVxOMJnji8+5a2+9cW
      6R4cZ9eeQ4RXJ1Fai2msLkFIRrnQ1U1h9S6syihj8x4O7W+ht7ub3PJ66itvvtD0XivBsUQa
      nVZ1V+K6hizT2XGWfYcO8fKLLzI3v8wnf/YXqC7IYnH0EmJuA4VWFRoVvPH6y0iGEkrtEgU1
      +yiwXd+jbXMByKytLGPLK0QhCeh1GqJxAbNJz+Xzb1G9+yhdZ09xsK2Rnst97HvyE+Sbbp2R
      oOPNnxCVtRzZ38C//fACLfva2LurlqXpYcamZ5H0DoyCj7CoZX9TGd1DE1TX76alrvSG97sq
      AKUYo7NnAEdFA7JSw//xl//AYydP8vnH65no72XGJ3FmcIkCY5rf/IWfYqT3IoGYwEc/+lF0
      7zG/v7y4QHFZBYH1JXqHJ2hobWVt1Y3DpmJyfo29h46QbTGwtDSH3ajnYv84ew4eIcd68zUO
      gFOv/RCdvZS2uhx6p5OkN2Y5/twzqFIJkmmRU2fOolDINJdkETRXUJ1v4/SZMzz3sY/e9J7B
      YBCbRcfrr7yJqbCc3TUOekYXePTIfgAGes6x4Rc4fLCFs+cvUlHbjCq2weJGiBNPPIFJ897C
      kMU0y04XZVeSNSwvLKEhTMJYgSLmobyinI2VWQZHZ2k9cJTgyjjuqJLDB/fw7nCubbMOcCMC
      68sklHo8MzMYDRrkZJyCqiYAWnbvo/PCGVKyFoMtl4pcI2vBBPmmWw/4FEoZMZYgEoxgtBpI
      xBMAlNW2EItEsDjKWNyw0KwJc3bMyWc/9hydFzrhJgK4isZo5+ihA3RfGsVhhU8+voec0hy+
      9g8dSJLM+tIEnzpWw6c/9jinOwZ46omTnDvfhfY2MoiUllcAkF1YxsnCMmRZpji/AKVSQVlN
      07XrysqqADh58vZWVU88/gwR/woXejdQiW4WFl0cBnRaDX3d3aiMNiyij7EFF1V765ka6gW9
      BRm4lWTTER9L3iBHGuykJBWpRPDa3xZmFsiuaia8sUo4LmKzWclx2Aj6zuOOCJiy3nuAq1Bp
      rlV+gNKKMiRJQqFUoriyT6WgpJqnSqoBcGTto/4m99o+CXZuQCQhkJeTjU6tIhr04o3JWHSb
      NUYUUkgKDY+cOMrcxBBraTP1+e+VpU6isq6d5soc5tcEnjr5GP7VFWCzVVkPCRTm2gj7/bg9
      IfL1Ek6Pm5Tw3u2EEPPT0TPI4cNtDIzP4ZwZpqEsl9/4qYN4Fkb4z7/+RU4eauNcZzcSSjZm
      R8ivbLorV20zF9H7MKc+O0nXpRHKasrQa9XU7d+Na2oCt2sdXzyJVq1GpzeiUKpQJoK4QnG0
      t7HirbY4+PmvfAHn2CjGrOzrfPiPf+5LVOi8eK0NfP7TH2V08CLIElq1hlA0cdfvolQqbynK
      m7GtXaB01M/QxDzmrFwMGrDpVIQVJkru4ZTIjeVZ5t0JDrbXcbGri8pde1mcGmP3nmaiMQV2
      m4GNpRn8ooH6igIudV+iZd8BDDeYR4e3XSD/8hT98y5Ky2vZvaua2ekZzFqBhNLExUt9ZOfm
      01iWw+D4HMefeIr1xVlqa2vv+j0+KELhEBaL9a4qE2y6QHq1xPnzFzHkFuMwinT3j9G+uw1J
      ZSHunsEVhgO7a+ntH6W4spG0b551f5yjjz2FzXB/k2ptawHsBG41DZpKpdBotXddmXYiNxsE
      i0IaWaFGvc02FV3rzyKRyI464Hi7IEkSyWTypmUXjz9cuY+i0eiDNuGOuCaA7RDPvhPZTvsB
      tgs7ODNchgwPFxkBZHioyQggw0NNRgAZHmoyAsjwULNtBCCLAutrTmKJNKlEDI8/CMj4PC6S
      aZFkKoksi9e2RGbI8H6wbWKB0qkEKo2GyclJtEoJg1ZByG8mjYpV1zRGvRqlkCSrpJY72xmb
      IcPN2TYC0BrM+OemUGmtqFVQVGihd9hJ+94WVhfmiAa9xCUDlUbttjok707TonzY2WllsW1C
      IaJBL/PLa6RlFWZV+oaJsSxaFXG19Z5igd5vMgth17PTjkjaNgLYqWQEcD07TQDbZhCcIcOD
      ICOADA81GQFkeKjJCCDDQ01GABkeajICyPBQkxFAhoeajAAyPNTcdwGI8QBjk1P88ze/wVrg
      4dovm2H7cd9jgWRZor/rLDWte0ml344ZEdMJZmfnseYWoieBK5CgpqqEuelpshxlqBEwG9QE
      4wqybe+V/yfDh5Ggd421QJr6yiJ6L3ZhL65HHXexGhA5dKAdObmZHDcuqjmydxe9A6PsPnAU
      3/IYEYWN3btqtmTouO8CUGkNWE0arPZcjLq3Hy9JMmWVVUxNTaNWqijM0TE8PIWjvIz11SV0
      OjWrsTjVTS3bJhDuKrIsbzubHiQfVFmEwjGWVlYwRVaZcUc5VJpmxhmhzCYx5wxSU2Tl8SdP
      0nGuk+HhIVrbW+i9cAqNrRirtEQoUbXlSNj7LgAhESEWDXP58mWOPnaSPOvm5yoljI9NUl3f
      wMriIjq9nkQijEGnQ61SEg/7iQs61EoFkrR9okElSUKSpExKmStcjY79IHAUlTC5sITf46P9
      4HEm+7vIsxvoH56jyV6HKIp4FsewFdUgeCYZGRpHp9Og0unQiRqSaQFRfb3Xf50AJFFgZryP
      RZfIoUN70KpAq9UiCGlkMY3THaDYUYBKpSCdFtBotYjpNAqViqW5WcqqaxDTabRa7U1T/g0N
      j6K3O5BSEvZ3nEsVdG+QVihwe3yYdQqmlny0tdUwOTGKPa8Iu92GzahlwxOgaJtFg97JIXkf
      dj64spDo7epgeWGRXc88TV/POQoqatGmvGSX1VJiCLPiMxKLK2nZVcSC4MIdXMdR00hwdYoN
      hYVdZi3vzii5NRo05WN0MYVN6WNsdonCkkqS8TilxQ7mFxdRaQ3Y9IAkozDZCHgCKFQqrHol
      Wq2GeFpCqTVRX3XjZLIbzhUisRiJZJry6nrM+p1dcTLRoNfzoKJBo9EoRpPpjrPw3XQWKJFM
      U9vQjCPHhM5oxajXUlBUSpbNhFpnpLa6HElIozVubmCBzeNosnOyEdMp0uk06XSadzsq2VYd
      517/IRcuD+EO330y1AwfALKMe3majWACv2uFN986hT+SQErHGBievHKJxOzIGHFJxrUyx/mL
      /YiSxORwLyPTiw/MdG9EYHBm/Y5d463Nr9pKVamMXpvH2to6luwCNBo/qPUUFVhAljav06ip
      KDMTC/tQ6YvQqmS0Gg3rGy7qaytJXEkJqNZcf4qfUqVl/7HHGRyaQvs+nNSe4f1DlkTW50cI
      ObJoL7azt6mUgaFZ7Eofs+447S31CKkYExcGMTfWMzo5Q12hle7LPczNb3D40N0ddv1+8O03
      hph3Bvjb334Wrfr2E+xuFYBSjeHKptui4s0c7PrsvC2XAei0oMu5/gyqoqLNQjDdJE//3IqL
      wiwLAyotJsONj7i838SiEXQGE0qFRDSaQKOUWXN50BksFBbkIIlp1tY2yC8sIuxzEU1KFBUV
      4Fpbw5pzZ2dw3S2yLDN84Q3E/BZKDXEuD09SWNmEOjRP3FzBvsYKxFSEM6c7wWinMlfPxOwy
      ja3NTAyNYs4r4fjBtls+Q6FSU1NdTX8M9EqBjsEpbGYLnQOTRKNhAk88ht1oprKiGFCQazMz
      MDKBZLRRVNvO1MQwuYcO3pfyeCezTj/eYIwsi551b4Sygtt3we57Ezw/O8Fb3cM8fbiBdW/k
      fj9+C0IswAsvfBdfTGR2fIRXz5xDlgTisRDnunoA6Ok6j9vroaPrAhcvXCSeSOJbX8Xt99PR
      eeG+2VpeXko0Hie7sIL2hkoS0QRl5eXE4jEAlGojR48dJJmMU+BwIEsC/oURcpqOEHAvvOf9
      xXScrktDzAxfYnpuCVBgyivn3/+7X+Tpk08SWJnF53MxMD9N38V+dHodSmsJjz/2JOnVYQyW
      nNvywWVZZmVl81yGWMCFL5wEuPYZwNriFB3dfQTcK7z66qt09Q4TC7g523mRtPS2m5MWRL7+
      Ui8//9E9fOJ4Az88P3Hb5Qmg+trXvva1O/rGPWLSqimqasBgNJGbbX/Pc3g/aJQaPSohgjm3
      lNLiItbXlqmtayTuWaWwto0ss564z8n43BK2vHIsGoHxySlqW/eyPDVKRUMbZr0arfb2j+68
      GxQKBcp0lNWwjCa2zlJYycH2epRikhVfnPLCPKRUmLfO9nHyiUcQZSUFFiULSTu64DyLG2F2
      t+66dVmoNFQ1tNLWWEtufgE1NbUU5G7OuDkcBSi1Wmz2bFr37qG2tIjc/CJqa6rQanXU1NdT
      WVpEMplE//+3d6bBcV1Xfv+91/uO3rA2GktjIwhwAxeRkkhJ1mrLltepcZxxOcmk7NTUJJVU
      ZXFVMvNpqqYmM1WTuGqSVDn2uOJM2R6XLEuyJcuypJAUNxHcSRD70li6G73vy1vyAQTFBegG
      JFIiaf4/Ad2n77v3vnvuWe455xqr1+2ILEzxzolzDPZ1cfbw64Q1zZjLEX7z/jA7tm4BQFJF
      tOkZ4sZ2DuzoYXJiGqPJRIOxxHhSpNllRVVVfvzbi/i8dp7c1UGT28YrR0bpb/Ngt2zsdstP
      fPU1+gO0Nrqpc3kwrnPpxCeJfGKJYydP88GZ81w8fYzh08MsxtLMRDJ0NNgJLS2RKpawmq0U
      c0lKlQqiKHL26FsEE0WymfQn0k9VlTkxfIn47CiJbJn44jQjk0E+OH2W+PwkZ4bPsJxIU64U
      OH76PLHFGc5ORhna0kapIvOZz3zmY/fBvsbFGflihdePj5ErbLxeU4MvQLPXjiBq2b5tEFEA
      T3MHrQ03uLeLaS5OR7EYNIydP0339t2YNDKXlkoMXrv69fLMMqNzUb5yaIVptBqRLzzawy+O
      XN2wMXx/+yDvAMzOJr79J//u+v+Duw8A0Hzo0Mp9vZUKu/c/te7vV92gdxuCoOHgsy9e/3/r
      tmt/BG52N7/0ed/1v/3XLqB5/ImPv/jXgqKovHx4hJ+/dwWf186OrsYN/W527CIjV0ZobG5j
      8eIwsxU39XQycmWEhuZ2DKJILhZEr9ciSRXSkpFuh4FX3z6OweomkS5gMer44a/P8m+++gi6
      G4zeff0+fnl0lKV4lma3rWb/H1aF+AgolSWWU3laPDYURdnUOUApFeKto2dobA2weyDAq794
      nc9+5YvolArHjxwhVRZ4dM8A758YZsu2IcJTl4nlZJ78zFMYa9wmWQ3vnZ1hfjnN5w/0YDbq
      qt6evhFkC2W+//oZAL76RD/NbhuiKHzscwClkiWZ1+JyrK9GKarK/3zlNP5GBy/u77nt+8Pn
      Z7k8HeE7L+1ec4wT83F+fWKcpXj2oQTYCFRVJVsoMxtKMb4Q58TlIBMLCf7+uy/dFM+0EWSj
      y2C0kIjFGD2foIwBGdCJKzcfnr06yeGjx9AZzZQlBX9rC8uXrlKW1Y/MAKqq8vbwFMlskYtT
      ESRZwWbW46934G9w0Oyx4a0z47SZNmSTzYaSfO/lUzy5s50XHulGvIN3Mos6K64q/FORZN48
      NUksXeDbXxhak2b/Vh+vHRsjHM/R6L55Y8oWyvzwjXMsxjL8l28evHcYQFUVQovzuBv9FFMR
      wskigfYWZiYncDa2olElLCYd6YKK026mUshw7ORptu7ch9tu4MzZcwztWntCPipyhTI/e/cK
      V+eiyIqCv8FBd4uLf/L0IOl8CatJj6Iom2ozHk/R0d1L8NJZxuJpghNzzCzuobfRid3TiFkc
      JyVp2H/gcYZPnuCRoZ04DGOkChXsho0Zdrfi7HgIvU7D3/7p84iiQEWSiacLzIXTzEVSjMwu
      s5zMk8wWsRh11NlMNLgsNLmsNLqsNLisWE16CqUKZ8dDvHlygu+8tJtun+sTu5B8FcOjS3z/
      9TN89xuPoVmHWXVaDS/u7+aVo1f59heGrvdxfjnNf//5SZ7e3ckTO9rRacV7hwHkcoFwaBGL
      x0dwKUqj08DlS6N4fK0szM1iMulYzOdp7xsA4MLZDxgc2sOp48fp9Tk5Pzp2Rxng8nSE//2r
      szyxs53/9I1HqbPemdvn27Zu5eixYdp6B+gPtLIwF0SnxBhfUInPXkLraOCF7b0cO3aEvoGd
      XL10DsnoodF2s5dJVVXePDmBp87Mnr71b24vlSV+/NYF/u0fPHJ9dzfotDS5bTS5bezr//C3
      sqKQyZdJZAqE4zmW4lmOX54nFM+SK1YIRlK47Wb+4l8+RZ31k6/QGk3l+em7l/nTr+xlV09T
      Vdr9W1t59f0xoqkCHoeJ8xNh/v7Nc/yLz+1ioMNLJZ/irSMX7x0G0BoseOpWjBatVofJYiY/
      l8ViNpK+dk9wUTai14jIskxbWwfHjh4hlcvy9u8uE8slmV2K0eKtrn8qA4t+AwAAFwlJREFU
      ikoiW8RpM64puotliX987wrj8wn+9Vf24vOu9Gm9CMfN1gYV9TYOPvEEAJIk0dDchKqquASB
      zqbHr9MdfOJJAJo8j658oMpIEmTyJc6MLXHkYpCpxSQOq4G+VjemdVSxf/jtBQ4MtNLksmyo
      j1ajFqvRRqv3ZgNSUVUuTEawmw1Yjdp125JlGamU4hcv/4aGQA8Bj5FzI1MMHTiEx2bg2Ltv
      kKkYePTAECeOnaAlsJXs0hiLiTLPf/Y5DOvcIpnMFvnL//s+33h6gB1dDYBadTyiAJ99JMBP
      37mIz2vj+OVF/sPXD1BfZ0aWZXIlGUUp3DsMUMwmWQjHSLOITQ9jM1G2bQswevUyDk8jdocN
      h0lH6Fo0qMFoRCvAvr1P0OWv5+LFYdqa3De1qaoqsqwQXE5zdS7KWDDG9FKSYlnCbNDR1eKi
      r83DljYPdouR6aUEP37rAtsCDfz5PzuEQVd7egRBuOvRoNNLCQ6fnyOWzhMMp9je1cgfPbud
      BpeVN09O8L2XP+Dff/3ATd4QgMmFOCPBGH/xx0+h3WB4gKoqqAgIfBjpqsgyGlHD7r4WVFVF
      keWVW9kFAVVVEUVx5XNVRaPRoJZLSBoBjSBy+oMzmB0OShUZrVZLMV8CvZmpq+fJSgKlUpFs
      WWFvm46r4TJD/tsjCAqlCn/781O8eKCX3VWk3a0Y6m3h714Zps/v5s+/dQiz8cPIA6fLjUGn
      fXC9QGVJ5kdvnOfCVJgmt5U+v4feVjedzS5MBi25YoXxYIyrc1FGZpcZn4+jqvBn3zrEljbP
      hp9zN6NBFUXl3ESI//aDnxFKC/znbx0knwizdec+fPV1LM2McXF8gQXZxcL8PM/sbqPDbeLC
      eJC9+x/lL398mG8+u52+DY5HlSWOvPYjhC1foC41QnA5QWNgJ6XIGJOzSb72R1+FbIyjJ86S
      KinsDNRz4uwiX//6C1w4eYSrkRTPHTyI2aijWBE5+c67VPQqhw7u54PhSQ49vpt4PE5m5jTn
      Yka6e7awOHWZXn8DJ44cYeilb9HpvFnVK5Yl/vonxxjqaeL5fd1sRguVFYV/fPcKe/qaCbS4
      bvpuYWqEwyfP3TsS4E6iWJb43sunqK8z81//1TMY9bcP02LUsaO7kR3djaiqyshslEy+RJ/f
      vUaLnyxUVWViIcFPfncJrRLncwcP4ChF0EkJOnr7GLk8gq9+P5fGpujyeXEJDoJXTvOjV6f5
      8oFu9m7v46++/xqdHe30bmI8gkbLnj17OJsXyBS0vPDZZzl+ZASP08HYQgadCoLFRUu9A4fg
      oKMvwOxMmmx0jphkxaZNoAKiKHLl3AlaBgZp95o4cfICA/2dnB+ZxazECFe8vPjUAGdOHifQ
      M8Dc9Ajzug56YnHmyibqrEYM1w5J/8crH9DV4uL5fV2bWvwAGlHkDz8zsOZ3LZ1b+HrnlvuX
      ARRVXVOHzxbK/M1PjzPYUc+XDvZtyHAVBIH+9rUD/j5JyLLCbDjFL49eJZYu8IdPDbC1w8Op
      I+9yfnyRba2DLC0EMRpXcqIteliIJJGUZRpdVi5eOMtrGjPz4TjjM3G++8cvbspwV6QSFy5e
      YrQUZ8AtcPi9o5i97aTSURyixFI8hZiZ49iFIPv2epiZuMrV0RF8gSb0FBgNLrFXBY3OyL7H
      nrje7pNPHgLA2wDQRjeQzpVIG3y8/tYlSmWJLW31HL88TzJbJJEpIisK5YrMju5G/uDJrQiC
      yuHfvkGioDLY383YxCQ5ScdXXnyaiStnGJ+axlDXSiEeRtWZef65Jznyyg/wHfwm3Z71w1Tu
      WxXoV8fHEYBn9nRe130TmQJ//ZPjHNzexrN7Otd4+Qrv/Po10sUyO/Y8xrF3X+fQS9+ixaEj
      Mj/F2YujmJxeDJUMwVCULX3djM/M0tLez57B7jX78VFVIFlWiKULTC0mmFiIM72UJJrK47ab
      eGZPJ3v7Wq67+U4deZuSwUvAa+DC6AzN7V1QKaORMgRDcbYOHaC13sGVK+f5zakpXn3nLP/x
      T77J8/u6NtUnVZFJJVMogojDYSObzWGz2chn0qDVE1kM0uJvI5fNodEZ0AoypbKE2WrHqNdS
      qZTJ5ws4HA4KpQrFsozFqKMsyRRKFWLpAq8dG6MiyUSTeXb2NHFwexs+rw2N+KFLU1VVZEVF
      khX0Wg2iKAAKb/7yF6RLKs987iWkyBhhoZ6BaxvX+RP/j9b+Hbz95lsIOgOPDHYxO3kex7Yv
      M9i0vvv4vpUAB7f7+cnvLvFnP3iPf/7ZHTisRv7qH97ni4/18dg2/zq/ElBUhXKpjN7mYvf2
      PpRrkYXuxkbkEycx+HrY2uIjWRohnMrwxc+/xNFjR4G1GeBGVCQZURRuepm3olSWOHJxjrdP
      T6HRiHQ1Owm0uDi0o40Gl3XNWPa9jz99/e/mjj5UpUKhDGajjhvD2/r7t+PwdpCQ6xjo3HyY
      tiBqqHN9qCs77CsJ21b7imfN2rVy6mpwfbigbjRZdTo9sBIW8r9eHebkyALNbhsajYBRp8Vp
      MxGMpHh6qJMX9nXdZrRf74cgoNUINx/KyUUqGgeD7TpimRyLs8s8erAfAKWSIykZ6ZMS1LX0
      oMktMD2/RDg4R9g4wWDT+kGA960EgFVdOc4Pf32OeKbAd17azfZAw/piX5X41atv0NJgQ7H5
      Sc8NY+k8wNZWJ9lUnGy+wJWJKXKJFHv37ycbmaNisJLNyxx8ZNeaTd4oAY5emOPn712h2Wtj
      W2cDWzu8NLisVCSZTL7Mb09PMTy6yI6uRp7bG6DRZb0rB0mqqn7iB1SrWA2FGA3GiCZz7N3S
      gkYUEYSVhS0rCqIgfIT+qcxPXSWYkNi7o49EMoPbaePU6Qvs2NpNCT02s57RC8OUjR4Ge9qp
      ZKMUdC4cxvU9YPc1A6yiLMlkciXcG6gXlEvFiaQKtHgdTM0E0ZosFDMpugLtzM2HaPX7WZqf
      oaxoCHR2sDgfpLnVj26dU8dbVaBiWSIYSXFhMsLlmQiRRI5UroS3zsxzewI8OuDHav74odPF
      TJjf/PYkXYODZJamWYwkOfDMCzRaV3R3SW+jz+fk7OUx9h58krHh4ygWD4/t3bHpvNnN4H67
      IeaeZgC5mOXiyAR2TyMmrYLNIJLDRoNr7WyzTwOrDKAUUxwbvogsWHDqcuSwcPDxR4kvTfM3
      /+ctdnY1c2iol8vjU5jr6hEKKeYiMb705a9h0m1+SYbHT/Kb8zEOPbaPtkY3xw6/x+5HD6HX
      CETmZ/jg0igGncgTBw/w6s9+QvO2Q0iRMbY99jx2w92Lgv/dr16mIJoY3LWP4JVTzAQzfO2b
      X4NcnMNHPiBdUXHpisSSBQZ2DnD6zAQmm5mvvPjcXetTNdzTSbnhUITAlq1U8mmWQ0FGZpap
      v4cW/42wOb3olTwGq46psSVy8QixTBGX1cDevhay2TgeXwdWow5/e4De7nbqm/ys4aHdENwd
      u/inX3qWKx8MU04toFqa0GsEVFVBozMgSzL9vd28d/gopvpudLklJoLLt5UFudPwNnjRyGWi
      0TQ93d00trWiAwwWB3aDgNZgRlEUrAaZuWgepAKi+Omlxt7TDGDQCWRyBSqSjMXhwqZTyJfv
      zQJUieUI9oY2iqksnpY6nHYLpXyGktZBX6cPf0sbp957g4JoQ6ekeeXNo3hdDm4rm7FBZGMh
      3n77bToGBwhFi+zd1UNkZoTZpRgXLl3CVudBUCQkSeTxx/dRLlfYvudRrPq7+8pFwY7b4yCX
      jPHar9/B43SQTadJxqOIdjflYpbuvgH0ZheNxhJ1zZ1I0qdXHeSeVoFUVWZmchJnQysaKljM
      JlKZAs46+6fdtetYVYFMRgPxRAJ7nQuNKpHOlymlwpjqO6CQwmh1oJTzZHIFLFYbhXwWVdDg
      cbvuWDhxpVJBq9PdVR2/FuKxZRRVg9PlILEcRRG1pJNR/B0BMskEJqsDQS5RVkTsVjOpZBy9
      yYbZeHdTStfDdQYoFAoPy/t9BCiKQrFYxGx+WLAXIJvN3ldFwq5roHc7qftOI51OY7FY0Ghu
      dnGtFqoVb/HFrwZ23Yq1Pt8sraqqmEymj9WGKN6eobUWraqqKIrysfqsKArCGq7IO/G8SqVy
      21xs5nnrfX63xnedAdZq/F6GKIrodLrbBrmq0QmCSj5fwmzSkytUMJsMa/qeVxfejTvXKvPc
      Sr8WLazM3a3zt0orSRUQNNcPddZa6LWed+v4NBrNik9dqlCRFbRa3ZpzcWMb+Xwes9m8UkLw
      mrRa73mFbBa9xYpGuPl5a7abzWK0WK8b16IorjkXK89TKJVUDNdCt9cb33pzVG18qqpQLJbR
      arXXI3PXa6OYz6MzmynlcvfvSTDcPsAbP8smI7x/4hJ+vxfR4KY3sHYY7Sr94swYsqEOr9uN
      Z52cvFXa2fEr6Bz1eFxuHLa1VZ9VWkGVmZ6eIpst0ORvp8F9e2HfFVqF0MICxYoECHgbm7EY
      b/eOfDhmhUsXTyGKbrRGA1t6O9btR6WU5/3DR/C1+SlKsHNwS9U+51JhLk/M0dzopbHRu6an
      ZJU2GQkSyYs01ntoqF878O7DPguEF2dIpjPYXA20+Rpvs1dWaRPRMKnsyqmy3enB5VhbrVql
      H718kXxFg9Eg0t/fX4VW5sz772Px+ShlCve2F+jjwOLwMLR7B81NPtr9tasVuNweVEWhVKxd
      4cHt9aDICsUN0EqVMpIMzf525FyG9VM4VExWKxuXwwIup4tEIordWb1atlZvYufuIdpbW+jq
      XJtRboTF7kREQaqUahrUNqcbVIVKubSBPssUi2Vc3iZsOsiXqiS06IyYDRt3j7o9boq5JFpj
      9UoQIDIwtIvujnYC3V33twSoBkGA8FIIVSmA3s3AluovPhJPgqonFo3S0lydYeKpFKgWooVl
      GrzVw43lYh5ZY8RqMmB0OarsOBrsdgvxeJaODt+6VDeiUgZPvWvdU+pVCIJAOBS6lg+ssm3b
      2iHCq1heDCEhkInHkVp9VFuGkVAUVVVJxmO0+GrXBs3mSrS02TAYjFUT8B0OOzPxBG3tbRsK
      m6hUJFxuF3p9LaYRSEVCRCUBoSI9uBIARPRiBbPdg2sNteNWtPt95PIZmvztNWlbm1vI5dO0
      dnTWpNWZbaiFFNPTc0g1Hc4CicgCl6+MkM7X2lFV0tkC9fX1WMy183PddhPoTNjras9Fc0cH
      eqWIxdNQdfEDtHb4UcsFnPXNG1hMIlaTlunpaXLF2oW0KrkkFy5dIRxN1qRNJlK4vfU47bU9
      UK5GL6qsYnPYHmQGAF9HN26HgUQyU5N2bnYOp8tJOBSqTTs3j9PlIBQK16TNx5dZXFwmlU3f
      VNNybQjoDXpUuYwq1FaG7FYTwblZYsnaNVZd9c20NnlJJmovpuhCEK3FTjwSoVbNi1AwiMle
      RzQS3sCZXoWFmSCFXJposrbKJOr06AQFeQMnVW6Xg4X5eRZC0Zq0BksdPYE2sqnUg80A6WSC
      eDKHu1qhGSAVCxOOpSiXy5TL1XemeGSRaDJDuVypSQtgdtTR19+FXmdEV3O2K+SLCk67gbGR
      KaSqJVcE/B1d9PcFyKRql2fM5zJEozEcLldVulI+zdxiiHKpTLlUrsoAhUyC+dAylXKJUrm8
      AQbQ0zO4BaPBgN1ay+2uks7kcXuczE5MUChVqlJ7mnz09/cjFWtvBpVSgWg0isnmeHBtAFAJ
      h0JotBoi0Th64w5c60y6w93Arm0i86EoPl/1pGtXfTOBfIF8WcbprJ1rK2gNCAjoNUBNk1JP
      S1MdM8Elmtu6atInYsvkS2Wamxtq9mM5EqaiakinQ+h0BnyNa9suBrOdnUO7mJwO4m71VV0g
      JpuTvt4AkUQWm925gRNoFUHQYNLpUIVau4FAe7uPsfEpHO7GmnZANpUklc3hbaxeLgUgG4+S
      zJYoZNIPsgRQQdDS0OjFbNQSW66+S84Gl+jt7SU0P1ez5WQqTV1dHRZTbd1b0Gix2WxoFJly
      1R1d4tTRIySLJRyOJjpaG9FWiVwLz88RiSXIpNNU5NrFuRRZxdvQgNFkJJOsrgYtzczQ2NlD
      Nhqu4rVaQSqRxGKvw2HbSJCigMVmw1FnIpXIVaUcOXea8bllDCYbW7o71szrXkU6HmF+KUwm
      k6FUrl36RZFlHC4PZoPxQZYAIv7WJpaTOdoDfZhvOZ28FfWeOsZGx3C4a+cGKzV1+Q9RKeSp
      KCr+7h4sVQ8btezat49waJFwJkk6X8JuXj+Vr8HXRoMPVKXE5HSEemd148/f3sbCUoTWtgB2
      a/W5cNY3MD89jtZir+mWVeSVBJeNzYhMLlvEYqsnYK8ez9U7uJPlSJiFxRDhWIpGz/rGu91V
      z1bXSgbcxPgEUF0iuppbKSws4m3xPcgSAHRGM267nrmFKJoqu2mlmOPchRFU1A0ZiTaLkaVQ
      iFS6+i62gjKjo5Mk4nHkGstEpzfi83cytHtX1cV/IwTRQFdg7QsJb6LTaPHWe5mbmUFXtYaR
      zIUPzlJWVdKJZE0j2OF0EF5aJBavPW8gMD15lUQyWVOnFzVaGppa2DU0VHXx34qu7g3kQQsi
      TreH8HzwQZYAkE2nyBeL1Dmq++q1BjOdgQAdgQ6iy7Ga7ZYqRQTBRj6TgIbqRqXeXIfHoack
      f7qx58V8jmQmj73OWYNSpLM3gKWpjWIyVlOvL+YLlGQBq1TcgBTQ0NraTCpXpGUT93jdaUjl
      IolEApP1AXaDKrKErCjE40l0NS7iEAQBuZxncXGJSDRRs22L2UxieQlBXzsCNBOeR+/2QzZO
      YQO6+t2AqipIskwyHkOsWcFOQFBlQktLLCzWdm0aLRZK2SQFqbaJDyViSYn2egOzi6kN9//O
      QqVSkcinksjCPVQc907jyvlhyjoHGq0Br7O6vqkqMna7jUgiRW9vb8229aY6Dj7ZQzi8XJVO
      UcosxVJkyikEwP8pJaovTo0yE81jFEV8LTU8RqqKwWYnFwzR0d1b0wYQRR0HHn+cxHKkBqXC
      7GSQipRldrGEx7fx6nt3Erl4iOGLkzj1evxb/A+uBBjY9QiD3W1YzXqWE9U9QMHJMRSTk+72
      Fq6OjtdsO74cYmZmhliqus9ZFPW0tTaTT2ZxOG1swna+o2gJbGH/7m14PXYWF6sv1MzyAotp
      ia39vUxdvUqtDJFcJsHMzCyL4VgNaSHSFuhAzeew1dkplT6d3BOLq4knDh6gua2J6Nz8g8sA
      sGIEd/X0Uu+qLgF0ei2FXI5sLodGWzsAy+NxUZHFdaNGb4QgiChyiVAkwTqFjz8RiBod/o4A
      bTUkgFano1IskMlmUUWxplrj8ngpFEo0NXo2lIkmijAzs4B+kxeL3EkIgkh9cys9Xe33dkpk
      NdzZ8hsq6UScggReT+0UxSuXz4JipqJUGBjYsm5lOKmcJhyVQcnR3NLyqdXq2SwKuTTJTAGP
      11sz0G7y6hXSZRWNIjGwYzuZdd+LxNxsGIMGnC3N6O+RuXhgbYDNQcDudLORTGNVVbCbLYzN
      hNmz/5EatBJz0zOUKysHNK3tbejudlmGOwCTxY7JUns2VFXF5a4jeGmUnoFdNdQJlfDCPJVy
      EXe5REuTD6vp089CfCgBNomZsZVkGKNQIZwq0tvpX1cCqNfKMF7LUcNg0N83UmAjyETmmEsL
      tLjNzM6H2TbYT3rd96KuxBZdW246vb5qCclPCg8lwCaRLxTRiUkKqBRz1YPhBEHEUOPS6PsZ
      6UQWVaMnGitRyBVqHJoJ6D/iHWd3Ew8lwCYhyxLyNX++KGoQBO7aBRn3OhRFRpJWvDmCIKLV
      aatIgHsTDyXAJqHRaLkxpOf3uZSMKGrQ6++vYgq34tNXwh7iIT5FPGSAh/i9xkMGeIjfazxk
      gIf4vcb/B7+XsJMtYMUjAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
